{"version":3,"sources":["components/Banner.jsx","components/HeroSection.jsx","components/SubSection.jsx","views/home/index.jsx","views/product/index.jsx","views/home/ContactUs.jsx","components/Complaints/TelecomComplaint.jsx","store/slices/auth.js","components/Complaints/HealthcareComplaint.jsx","components/Complaints/TransportComplaint.jsx","components/Chatbot/ChatMessage.jsx","components/Chatbot/CustomTextArea.jsx","store/slices/chatbot.js","helpers/AxiosInstance.js","api/index.js","api/modules/user.js","api/modules/chatbot.js","api/modules/feedback.js","api/modules/newsfeed.js","components/Chatbot/Chatbot.jsx","components/Chatbot/Feedback.jsx","components/Chatbot/Newsfeed.jsx","views/chatbot/PublicTransportation.jsx","components/CountBox.jsx","components/Graph.jsx","helpers/GraphDivider.js","components/Chatbot/Instruction.jsx","helpers/TokenRefresh.js","views/dashboard/index.jsx","views/chatbot/HealthCare..jsx","views/chatbot/Telecommunication.jsx","views/about/index.jsx","components/CustomTextField.jsx","components/Forms/LoginForm.jsx","views/login/index.jsx","components/Forms/RegisterForm.jsx","views/register/index.jsx","views/helpers/ResetPassword.jsx","views/helpers/ForgetPassword.jsx","utils/theme.jsx","views/helpers/AccountActivation.jsx","components/FeedbackItem.jsx","store/slices/sessions.js","components/Chatbot/ChatDisplay.jsx","views/dashboard/Feedback.jsx","router/routes.js","containers/Footer.jsx","containers/NavPanel.jsx","layout/HomeLayout.js","layout/LoginLayout.js","router/index.jsx","App.js","store/reducers/entities.js","store/reducers/reducer.js","store/configureStore.js","index.js"],"names":["Banner","bk_1","useMediaQuery","theme","breakpoints","up","Box","marginTop","src","height","width","alt","useStyles","makeStyles","body","down","HeroSection","classes","Item","props","className","square","elevation","item","imgSrc","animation","duration","swipe","indicators","map","i","margin","padding","title","palette","primary","main","parallax","description","color","light","spacing","pic","SubSection","sectionName","imageSrc","align","isSmallScreen","y","Paper","Grid","container","justifyContent","sm","md","Typography","component","variant","display","Home","root","background","dark","paper","paddingTop","paddingBottom","textAlign","name","secondary","subtitle","content","textJustify","img","Product","bk","tagOuter","alignItems","to","logo","heading","marginBottom","contactSection","logoSection","socialMedia","flexWrap","ContactUs","xs","fontSize","styles","StyleSheet","create","sub_heading","TelecomComplaint","issue","phone","email","author","subject","size","style","data","field","weighting","getContent","r","position","bottom","slice","createSlice","initialState","userDetails","signedIn","loading_user","loading_token","token","reducers","userTokenRequested","user","action","userTokenRequestFailed","userTokenReceived","payload","userRequested","userRequestFailed","userReceived","userSignOutRequested","userSignOutRequestFailed","userSignedOut","refreshToken","access","actions","getToken","createSelector","state","auth","getUser","getUserSignedIn","HealthcareComplaint","TransportComplaint","vehicle_no","driver_id","conductor_id","container_bot_text","maxWidth","borderRadius","backgroundColor","contrastText","marginLeft","container_bot_buttons","container_bot_table","container_bot_complaint","container_user","marginRight","font","fontWeight","textDecoration","link","row_root","borderBottom","Row","row","React","useState","open","setOpen","Fragment","TableRow","TableCell","scope","package_name","value","IconButton","onClick","colSpan","Collapse","in","timeout","unmountOnExit","Table","TableBody","activation_method","Button","href","url","target","ChatMessage","sender","sendMessage","type","text","image","buttons","table","complaint","button","displayName","useSelector","Link","ButtonGroup","disableElevation","index","TableContainer","TableHead","domain","document","fullname","contactnum","fileName","first_name","blob","loading","error","CircularProgress","GetAppRounded","vehical_number","CustomTextArea","toggleRecord","message","updateMessage","listening","useSpeechRecognition","TextField","multiline","maxRows","onChange","e","InputProps","disableUnderline","chat","rating","updateChat","chatbot","updateRating","getChat","entities","AxiosInstance","axios","baseURL","process","api","POST","signIn","password","method","headers","signUp","last_name","user_type","re_password","forgotPassword","resetPassword","uid","new_password","activateUser","refresh","verifyToken","GET","Authorization","getUsers","feedback","user_id","chatsession","sessions","PUT","updateFeedback","id","resolved","newsfeed","getNews","getInstructions","addNews","date","img_url","addInstructions","label","DELETE","deleteInstructions","body_scroll","flexRow","flexColumn","flexDirection","textArea","buttonGroup","Chatbot","finish","dispatch","useDispatch","chatMessages","updateChatMessages","transcript","resetTranscript","updateChatBox","a","displayMessage","reply","temp","custom","mapLink","packages","console","log","toast","useEffect","Card","key","clsx","SpeechRecognition","stopListening","startListening","card","flex","icon_group","text_area","text_style","Feedback","submit","setIndex","selected","updateSelected","feedbackDisplay","setFeedbackDisplay","Container","select","tempList","setTimeout","click","TabPanel","children","other","role","hidden","newsfeed_body","a11yProps","newsfeed_post","newsfeed_scroll","overflowY","newsfeed_post_body","paddingLeft","askme","Newsfeed","domainImg","posts","instructions","setValue","direction","AppBar","Tabs","event","newValue","Tab","CardHeader","avatar","Avatar","subheader","Divider","inst","Chip","minHeight","PublicTransportation","setNewsfeed","history","useHistory","displayFeedback","updateDisplayFeedback","chatJSON","JSON","stringify","success","push","response","getNewsfeedContent","Modal","box","weighted","CountBox","count","changeGraph","disableGraph","useStyle","Graph","format","x_format","graph_data","moment","add","substr","LineChart","top","right","left","XAxis","dataKey","YAxis","CartesianGrid","strokeDasharray","Tooltip","Legend","verticalAlign","Line","stroke","MonthDivider","MonthCounter","session","timestamp","Instruction","deleteIns","Accordion","AccordionSummary","expandIcon","ExpandMore","AccordionDetails","Delete","TokenGenerator","status","result","graph","button_group","dialog_body","aspectRatio","instruction_container","maxHeight","Dashboard","updateData","session_count","update_session_count","feedback_count","update_feedback_count","openDialog","toggleOpen","infoType","changeInfoType","setDomain","setUsers","activeUsers","setActiveUsers","registeredUsers","setRegisteredUsers","imageUrl","news","setNews","instruction","setInstruction","updateInstructions","ins","loadFeatures","filter","s","loadData","user_data","u","last_login","registered","user_created","diff","loadUsers","handleSubmit","new_instructions","length","addInstruction","is_superuser","xl","Dialog","onClose","DialogContent","MenuItem","InputLabelProps","shrink","HealthCare","Telecommunication","AboutUs","CustomTextField","withStyles","borderBottomColor","borderColor","form","inputtext","LoginForm","onSubmit","formik","useFormik","initialValues","validationSchema","Yup","shape","required","min","noValidate","fullWidth","autoComplete","inputProps","getFieldProps","touched","errors","Login","res","is_admin","RegisterForm","Register","Object","values","ResetPassword","useParams","when","is","val","then","oneOf","ForgetPassword","fonts","createTheme","typography","fontFamily","join","h6","h1","h3","body1","subtitle2","AccountActivation","activate","tag","FeedbackItem","selectFeedback","tagColor","changeColor","toUpperCase","sessions_list","sessionsRequested","store","sessionsRequestFailed","sessionsReceived","getSessions","ChatDisplay","parse","icon","breadcrumb","grid_container","grid_item1","grid_item2","feedback_card","feedbacks","subHeading","selected_feedback","feedback_data","loadFeedback","resolveFeedback","window","location","reload","lg","CardContent","border","routes_home","exact","path","Error404","routes_login","footer","Copyright","Date","getFullYear","Footer","ThemeProvider","gutterBottom","flexGrow","menuButton","list","corner","navItem","listItem","arrowButton","sideNavLink","NavPanel","userSignedIn","Toolbar","edge","ListItem","Drawer","anchor","List","ListItemIcon","ListItemText","divider","HomeLayout","disableGutters","HomeLayoutRoute","Component","rest","render","LoginLayout","pt","pb","LoginLayoutRoute","AppRouter","route","App","CssBaseline","combineReducers","persistConfig","storage","storageSession","whiteList","rootReducer","AuthReducer","EntitiesReducer","persistReducer","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","persistor","persistStore","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.ee62950e.chunk.js","sourcesContent":["import { Box, useMediaQuery } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst Banner = () => {\r\n  const bk_1 = useMediaQuery((theme) => theme.breakpoints.up(\"md\"));\r\n  return (\r\n    <div>\r\n      <Box marginTop=\"50px\">\r\n        <img src={bk_1 ? \"./banner.png\" : \"./banner_mob.png\"} height=\"auto\" width=\"100%\" alt=\"\" />\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import { Box, makeStyles, useMediaQuery } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\n\r\nconst HeroSection = () => {\r\n  const bk_1 = useMediaQuery((theme) => theme.breakpoints.up(\"md\"));\r\n  const classes = useStyles();\r\n  var items1 = [\r\n    {\r\n      imgSrc: \"./banner_4.png\",\r\n    },\r\n    {\r\n      imgSrc: \"./banner_1.png\",\r\n    },\r\n    {\r\n      imgSrc: \"./banner_2.png\",\r\n    },\r\n    {\r\n      imgSrc: \"./banner_3.png\",\r\n    },\r\n  ];\r\n  var items2 = [\r\n    {\r\n      imgSrc: \"./banner_4_mob.png\",\r\n    },\r\n    {\r\n      imgSrc: \"./banner_1_mob.png\",\r\n    },\r\n    {\r\n      imgSrc: \"./banner_2_mob.png\",\r\n    },\r\n    {\r\n      imgSrc: \"./banner_3_mob.png\",\r\n    },\r\n  ];\r\n  function Item(props) {\r\n    return (\r\n      <Box className={classes.body} square elevation={5}>\r\n        <img src={props.item.imgSrc} height=\"auto\" width=\"100%\" alt=\"\" />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n      <Box>\r\n        <Carousel\r\n          animation=\"fade\"\r\n          duration={1000}\r\n          swipe={true}\r\n          indicators={false}\r\n        >\r\n          {bk_1\r\n            ? items1.map((item, i) => <Item key={i} item={item} />)\r\n            : items2.map((item, i) => <Item key={i} item={item} />)}\r\n        </Carousel>\r\n      </Box>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  body: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: \"8px\",\r\n    },\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      marginTop: \"0px\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default HeroSection;\r\n","import {\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport React from \"react\";\r\nimport { Parallax } from \"react-scroll-parallax\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      margin: \"10px 80px\",\r\n      padding: \"40px\",\r\n    },\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      margin: \"30px 20px\",\r\n      padding: \"20px\",\r\n    },\r\n  },\r\n  title: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginTop: \"0px\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginTop: \"15px\",\r\n    },\r\n    color: theme.palette.primary.main,\r\n  },\r\n  parallax: {\r\n    margin: \"0px\",\r\n  },\r\n  description: {\r\n    color: theme.palette.primary.light,\r\n    padding: theme.spacing(2)\r\n  },\r\n  pic: {\r\n    width: \"80%\",\r\n    height: \"auto\",\r\n  },\r\n}));\r\n\r\nconst SubSection = (props) => {\r\n  const { sectionName, description, imageSrc, align } = props;\r\n  const classes = useStyles();\r\n  const isSmallScreen = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n  return (\r\n    <Parallax className={classes.parallax} y={[10 ,-10]}>\r\n      <Paper className={classes.body} elevation={5}>\r\n        <Grid container justifyContent=\"center\" spacing={2}>\r\n          {align === \"left\" || isSmallScreen ? (\r\n            <Grid item sm={12} md={4}>\r\n              <img className={classes.pic} src={imageSrc} alt={sectionName} />\r\n            </Grid>\r\n          ) : null}\r\n\r\n          <Grid item sm={12} md={8}>\r\n            <Typography className={classes.title} component=\"h3\" variant=\"h3\">\r\n              {sectionName}\r\n            </Typography>\r\n            <Typography\r\n              className={classes.description}\r\n              component=\"body1\"\r\n              variant=\"body1\"\r\n              align=\"justify\"\r\n              display=\"block\"\r\n            >\r\n              {description}\r\n            </Typography>\r\n          </Grid>\r\n          {align === \"right\" && !isSmallScreen ? (\r\n            <Grid item sm={12} md={4}>\r\n              <img className={classes.pic} src={imageSrc} alt={sectionName} />\r\n            </Grid>\r\n          ) : null}\r\n        </Grid>\r\n      </Paper>\r\n    </Parallax>\r\n  );\r\n};\r\n\r\nexport default SubSection;\r\n\r\nSubSection.propTypes = {\r\n  sectionName: PropTypes.string,\r\n  description: PropTypes.string,\r\n  imageSrc: PropTypes.string,\r\n  align: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport Banner from \"../../components/Banner\";\r\nimport HeroSection from \"../../components/HeroSection\";\r\nimport SubSection from \"../../components/SubSection\";\r\n\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <HeroSection />\r\n      <SubSection\r\n        sectionName=\"Public Transportation\"\r\n        description=\"Built with the cutting edge technologies, the Public Transportation Chatbot is what exactly you need to find information related to Public Transportation in Sri Lanka. Users are provided with many functionalities such as Finding Schedules, Booking Seats, Finding Contact Information, and many more. The Complaint Management module which is also integrated with the Chatbot allows you to make complaints easily without bothering anymore. The Chatbot is only limited by evolution of human purpose.\"\r\n        imageSrc=\"./bus.svg\"\r\n        align='left'\r\n      />\r\n      <SubSection\r\n        sectionName=\"Health Care\"\r\n        description=\"Make a conversation with our AI powered assistant.He will let you place appointments with your doctors, channel specialists, shift appointments to another time slot, cancel appointments , get reports and make reservations for conduct tests and more with our partner hospital. As well as it will keep your conversations secured and private.\"\r\n        imageSrc=\"./healthcare.svg\"\r\n        align='right'\r\n      />\r\n      <SubSection\r\n        sectionName=\"Telecommunication\"\r\n        description=\"Chatbots can perform a number of functions without constant human intervention In the telecommunication industry. Wingman provides a telecommunication chatbot with the latest technologies to solve various questions and fulfill user requests by simple interactive chat sessions. You can ask easily about data package details, television connection, signal issues, broadband connections, and another general types of questions from the wingman, It will redirect you to relevant resources quickly to fulfill your requirement.\"\r\n        imageSrc=\"./telecommunication.svg\"\r\n        align='left'\r\n      />\r\n      <Banner />\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Parallax } from \"react-scroll-parallax\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    background: `linear-gradient(45deg, ${theme.palette.primary.main} 30%, ${theme.palette.primary.dark} 90%)`,\r\n    height: \"calc(100vh - 110px)\",\r\n  },\r\n  container: {\r\n    height: \"100%\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(4),\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      margin: \"0px\",\r\n    },\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      margin: \"20px 20px\",\r\n    }\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.main\r\n  },\r\n  parallax: {\r\n    margin: \"0px\",\r\n  },\r\n  body: {\r\n    background: `linear-gradient(45deg, ${theme.palette.primary.dark} 30%, ${theme.palette.primary.light} 90%)`,\r\n    paddingTop: \"120px\",\r\n    paddingBottom: \"80px\",\r\n    textAlign: \"center\",\r\n  },\r\n  name: {\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  subtitle: {\r\n    color: theme.palette.secondary.light,\r\n  },\r\n  content: {\r\n    textAlign: \"justify\",\r\n    textJustify: \"inter-word\",\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  img: {\r\n    marginTop: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst Product = () => {\r\n  const classes = useStyles();\r\n  const bk = useMediaQuery((theme) => theme.breakpoints.up(\"md\"));\r\n  return (\r\n    <div>\r\n      <Parallax className={classes.parallax} y={[-45, 20]} tagOuter=\"figure\">\r\n        <Paper className={classes.body} square elevation={3}>\r\n          <Typography className={classes.name} component=\"h3\" variant=\"h3\">\r\n            Top Performing Chatbot\r\n          </Typography>\r\n          <Typography className={classes.subtitle} component=\"h6\" variant=\"h6\">\r\n            Built with modern NLP techniques\r\n          </Typography>\r\n        </Paper>\r\n      </Parallax>\r\n      <Parallax className={classes.parallax} y={[-5, 5]} tagOuter=\"figure\">\r\n        <Grid\r\n          container\r\n          className={classes.container}\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-around\"\r\n        >\r\n          <Grid item sm={12} md={4} className={classes.img}>\r\n            <img\r\n              src=\"/herosection.svg\"\r\n              height=\"auto\"\r\n              width={bk ? \"100%\" : \"70%\"}\r\n              alt=\"\"\r\n            />\r\n          </Grid>\r\n          <Grid item sm={12} md={5}>\r\n            <Paper className={classes.paper} elevation={12}>\r\n              <Typography variant=\"h4\" className={classes.title}>\r\n                Social Inquery Chatbot\r\n              </Typography>\r\n              <Typography variant=\"body1\" className={classes.content}>\r\n                Top performing chatbot created for social inqueries in the\r\n                domains of Public Transportation, Health Care, and\r\n                Telecommunication built with modern{\" \"}\r\n                <b>Natural Language Processing (NLP)</b> techniques.\r\n              </Typography>\r\n              <Typography variant=\"body1\" className={classes.content}>\r\n                If you are interested in integrating the Social Inquery Chatbot\r\n                to your system, we got you. <Link to=\"/contactus\">Contact</Link>{\" \"}\r\n                our developers for future details.\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Parallax>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import { Grid, makeStyles, Paper, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Parallax } from \"react-scroll-parallax\";\r\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\n\r\nconst ContactUs = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Parallax className={classes.parallax} y={[-55, 25]} tagOuter=\"figure\">\r\n        <Paper className={classes.body} square elevation={3}>\r\n          <Typography className={classes.name} component=\"h3\" variant=\"h3\">\r\n            GET IN TOUCH\r\n          </Typography>\r\n          <Typography className={classes.subtitle} component=\"h6\" variant=\"h6\">\r\n            We'd love to hear from you\r\n          </Typography>\r\n        </Paper>\r\n      </Parallax>\r\n      <Parallax className={classes.parallax} y={[-5, 5]} tagOuter=\"figure\">\r\n        <Paper className={classes.paper} elevation={12}>\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={12} sm={12} md={6} className={classes.logoSection}>\r\n              <img\r\n                className={classes.logo}\r\n                src=\"./logo-robot-only.svg\"\r\n                alt=\"Logo\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              sm={12}\r\n              md={6}\r\n              className={classes.contactSection}\r\n            >\r\n              <Typography\r\n                component=\"h4\"\r\n                variant=\"h4\"\r\n                className={classes.heading}\r\n              >\r\n                Developers\r\n              </Typography>\r\n              <Typography component=\"body1\" variant=\"body1\">\r\n                Kavindu - kavindu.18@cse.mrt.ac.lk\r\n                <br />\r\n                Chandima - chandimaamarasena.18@cse.mrt.ac.lk\r\n                <br />\r\n                Yasith - yasith.18@cse.mrt.ac.lk\r\n              </Typography>\r\n              <Typography\r\n                component=\"h4\"\r\n                variant=\"h4\"\r\n                className={classes.heading}\r\n              >\r\n                Social Media\r\n              </Typography>\r\n              <div className={classes.socialMedia}>\r\n                <YouTubeIcon fontSize=\"large\" />\r\n                <Typography component=\"body1\" variant=\"body1\">\r\n                  Youtube - www.youtube.com/wingman\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.socialMedia}>\r\n                <FacebookIcon fontSize=\"large\" />\r\n                <Typography component=\"body1\" variant=\"body1\">\r\n                  Facebook - www.facebook.com/wingman\r\n                </Typography>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Parallax>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    background: `linear-gradient(45deg, ${theme.palette.primary.main} 30%, ${theme.palette.primary.dark} 90%)`,\r\n    paddingTop: \"120px\",\r\n    paddingBottom: \"80px\",\r\n    textAlign: \"center\",\r\n  },\r\n  name: {\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  subtitle: {\r\n    color: theme.palette.secondary.light,\r\n  },\r\n  parallax: {\r\n    margin: \"0px\",\r\n  },\r\n  logo: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"300px\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"200px\",\r\n    },\r\n  },\r\n  paper: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      margin: \"20px 150px\",\r\n    },\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      margin: \"20px 20px\",\r\n    },\r\n  },\r\n  heading: {\r\n    marginTop: \"20px\",\r\n    marginBottom: \"10px\",\r\n  },\r\n  contactSection: {\r\n    padding: \"40px\",\r\n    textAlign: \"left\",\r\n  },\r\n  logoSection: {\r\n    padding: \"40px\",\r\n    background: `linear-gradient(45deg, ${theme.palette.secondary.main} 30%, ${theme.palette.secondary.light} 100%)`,\r\n  },\r\n  socialMedia: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexWrap: \"wrap\",\r\n  }\r\n}));\r\n\r\nexport default ContactUs;\r\n","import {\r\n  DataTableCell,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHeader,\r\n} from \"@david.kucsai/react-pdf-table\"\r\nimport {\r\n  Document,\r\n  Image,\r\n  Page,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n} from \"@react-pdf/renderer\";\r\nimport React from \"react\";\r\n\r\nconst styles = StyleSheet.create({\r\n  heading: {\r\n    marginTop: \"30px\",\r\n    textAlign: \"center\",\r\n    fontSize: \"24px\",\r\n  },\r\n  sub_heading: {\r\n    textAlign: \"left\",\r\n    fontSize: \"15px\",\r\n    marginTop: \"10px\",\r\n  },\r\n  content: {\r\n    textAlign: \"left\",\r\n    fontSize: \"10px\",\r\n    marginTop: \"5px\",\r\n  },\r\n});\r\n\r\nconst TelecomComplaint = ({ issue, description, name, phone, email }) => (\r\n  <Document\r\n    title=\"Telecom Complaint Form\"\r\n    author=\"Wingman Inc.\"\r\n    subject=\"Submitted Complaint Form View\"\r\n  >\r\n    <Page size=\"A4\">\r\n      <Image\r\n        src=\"/Complaint_heading_telecom.png\"\r\n        style={{ width: \"100%\", height: \"auto\" }}\r\n      />\r\n      <Text style={styles.heading}>Complaint Form Preview</Text>\r\n      <View style={{ margin: \"50px\" }}>\r\n        <Table\r\n          data={[\r\n            {\r\n              field: \"Issue\",\r\n              content: issue,\r\n            },\r\n            {\r\n              field: \"Description\",\r\n              content: description,\r\n            },\r\n            {\r\n              field: \"Name of the complainer\",\r\n              content: name,\r\n            },\r\n            {\r\n              field: \"Phone number of the complainer\",\r\n              content: phone,\r\n            },\r\n            {\r\n              field: \"Email address of the complainer\",\r\n              content: email,\r\n            },\r\n          ]}\r\n        >\r\n          <TableHeader>\r\n            <TableCell weighting={0.6}>\r\n              Field\r\n            </TableCell>\r\n            <TableCell>\r\n              Content\r\n            </TableCell>\r\n          </TableHeader>\r\n          <TableBody>\r\n            <DataTableCell weighting={0.6} getContent={(r) => r.field} />\r\n            <DataTableCell getContent={(r) => r.content} />\r\n          </TableBody>\r\n        </Table>\r\n      </View>\r\n      <Image\r\n        src=\"/complaint_footer.png\"\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"auto\",\r\n          position: \"absolute\",\r\n          bottom: \"0px\",\r\n        }}\r\n      />\r\n    </Page>\r\n  </Document>\r\n);\r\n\r\nexport default TelecomComplaint;\r\n","import { createSlice, createSelector } from '@reduxjs/toolkit';\r\n\r\nconst slice = createSlice({\r\n\tname: 'auth',\r\n\tinitialState: {\r\n\t\tuserDetails: {},\r\n\t\tsignedIn: false,\r\n\t\tloading_user: false,\r\n\t\tloading_token: false,\r\n\t\ttoken: {}\r\n\t},\r\n\treducers: {\r\n\t\tuserTokenRequested: (user, action) => {\r\n\t\t\tuser.loading_token = true;\r\n\t\t},\r\n\t\tuserTokenRequestFailed: (user, action) => {\r\n\t\t\tuser.loading_token = false;\r\n\t\t},\r\n\t\tuserTokenReceived: (user, action) => {\r\n\t\t\tuser.token = action.payload;\r\n\t\t\tuser.loading_token = false;\r\n\t\t},\r\n\t\tuserRequested: (user, action) => {\r\n\t\t\tuser.loading_user = true;\r\n\t\t},\r\n\t\tuserRequestFailed: (user, action) => {\r\n\t\t\tuser.loading_user = false;\r\n\t\t},\r\n\t\tuserReceived: (user, action) => {\r\n\t\t\tuser.userDetails = action.payload;\r\n\t\t\tuser.signedIn = true;\r\n\t\t\tuser.loading_user = false;\r\n\t\t},\r\n\t\tuserSignOutRequested: (user, action) => {\r\n\t\t\tuser.loading_user = true;\r\n\t\t},\r\n\t\tuserSignOutRequestFailed: (user, action) => {\r\n\t\t\tuser.loading_user = false;\r\n\t\t},\r\n\t\tuserSignedOut: (user, action) => {\r\n\t\t\tuser.signedIn = false;\r\n\t\t\tuser.userDetails = {};\r\n\t\t\tuser.token = {};\r\n\t\t\tuser.loading_user = false;\r\n\t\t},\r\n\t\trefreshToken: (user, action) => {\r\n\t\t\tuser.token.access = action.payload;\r\n\t\t}\r\n\t}\r\n});\r\n\r\nexport const {\r\n\tuserTokenRequested,\r\n\tuserTokenRequestFailed,\r\n\tuserTokenReceived,\r\n\tuserRequested,\r\n\tuserRequestFailed,\r\n\tuserReceived,\r\n\tuserSignOutRequested,\r\n\tuserSignOutRequestFailed,\r\n\tuserSignedOut,\r\n\trefreshToken\r\n} = slice.actions;\r\n\r\nexport default slice.reducer;\r\n\r\nexport const getToken = createSelector(\r\n\tstate => state.auth,\r\n\tauth => auth.token\r\n);\r\n\r\nexport const getTokenStatus = createSelector(\r\n\tstate => state.auth,\r\n\tauth => auth.loading_token\r\n);\r\n\r\nexport const getUser = createSelector(\r\n\tstate => state.auth,\r\n\tauth => auth.userDetails\r\n);\r\n\r\nexport const getUserStatus = createSelector(\r\n\tstate => state.auth,\r\n\tauth => auth.loading_user\r\n);\r\n\r\nexport const getUserSignedIn = createSelector(\r\n\tstate => state.auth,\r\n\tauth => auth.signedIn\r\n);\r\n","import {\r\n  DataTableCell,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHeader,\r\n} from \"@david.kucsai/react-pdf-table\";\r\nimport {\r\n  Document,\r\n  Image,\r\n  Page,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n} from \"@react-pdf/renderer\";\r\nimport React from \"react\";\r\n\r\nconst styles = StyleSheet.create({\r\n  heading: {\r\n    marginTop: \"30px\",\r\n    textAlign: \"center\",\r\n    fontSize: \"24px\",\r\n  },\r\n  sub_heading: {\r\n    textAlign: \"left\",\r\n    fontSize: \"15px\",\r\n    marginTop: \"10px\",\r\n  },\r\n  content: {\r\n    textAlign: \"left\",\r\n    fontSize: \"10px\",\r\n    marginTop: \"5px\",\r\n  },\r\n});\r\n\r\nconst HealthcareComplaint = ({ issue, description, name, phone, email }) => (\r\n  <Document\r\n    title=\"Telecom Complaint Form\"\r\n    author=\"Wingman Inc.\"\r\n    subject=\"Submitted Complaint Form View\"\r\n  >\r\n    <Page size=\"A4\">\r\n      <Image\r\n        src=\"/Complaint_heading_healthcare.png\"\r\n        style={{ width: \"100%\", height: \"auto\" }}\r\n      />\r\n      <Text style={styles.heading}>Complaint Form Preview</Text>\r\n      <View style={{ margin: \"50px\" }}>\r\n        <Table\r\n          data={[\r\n            {\r\n              field: \"Issue\",\r\n              content: issue,\r\n            },\r\n            {\r\n              field: \"Description\",\r\n              content: description,\r\n            },\r\n            {\r\n              field: \"Name of the complainer\",\r\n              content: name,\r\n            },\r\n            {\r\n              field: \"Phone number of the complainer\",\r\n              content: phone,\r\n            },\r\n            {\r\n              field: \"Email address of the complainer\",\r\n              content: email,\r\n            },\r\n          ]}\r\n        >\r\n          <TableHeader>\r\n            <TableCell weighting={0.6}>\r\n              Field\r\n            </TableCell>\r\n            <TableCell>\r\n              Content\r\n            </TableCell>\r\n          </TableHeader>\r\n          <TableBody>\r\n            <DataTableCell weighting={0.6} getContent={(r) => r.field} />\r\n            <DataTableCell getContent={(r) => r.content} />\r\n          </TableBody>\r\n        </Table>\r\n      </View>\r\n      <Image\r\n        src=\"/complaint_footer.png\"\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"auto\",\r\n          position: \"absolute\",\r\n          bottom: \"0px\",\r\n        }}\r\n      />\r\n    </Page>\r\n  </Document>\r\n);\r\n\r\nexport default HealthcareComplaint;\r\n","import {\r\n    DataTableCell,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHeader,\r\n  } from \"@david.kucsai/react-pdf-table\"\r\n  import {\r\n    Document,\r\n    Image,\r\n    Page,\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n  } from \"@react-pdf/renderer\";\r\n  import React from \"react\";\r\n  \r\n  const styles = StyleSheet.create({\r\n    heading: {\r\n      marginTop: \"30px\",\r\n      textAlign: \"center\",\r\n      fontSize: \"24px\",\r\n    },\r\n    sub_heading: {\r\n      textAlign: \"left\",\r\n      fontSize: \"15px\",\r\n      marginTop: \"10px\",\r\n    },\r\n    content: {\r\n      textAlign: \"left\",\r\n      fontSize: \"10px\",\r\n      marginTop: \"5px\",\r\n    },\r\n  });\r\n  \r\n  const TransportComplaint = ({ title, description, vehicle_no, driver_id, conductor_id }) => (\r\n    <Document\r\n      title=\"Telecom Complaint Form\"\r\n      author=\"Wingman Inc.\"\r\n      subject=\"Submitted Complaint Form View\"\r\n    >\r\n      <Page size=\"A4\">\r\n        <Image\r\n          src=\"/Complaint_heading_transport.png\"\r\n          style={{ width: \"100%\", height: \"auto\" }}\r\n        />\r\n        <Text style={styles.heading}>Complaint Form Preview</Text>\r\n        <View style={{ margin: \"50px\" }}>\r\n          <Table\r\n            data={[\r\n              {\r\n                field: \"Complaint Title\",\r\n                content: title,\r\n              },\r\n              {\r\n                field: \"Description\",\r\n                content: description,\r\n              },\r\n              {\r\n                field: \"Vehicle No\",\r\n                content: vehicle_no,\r\n              },\r\n              {\r\n                field: \"Driver ID\",\r\n                content: driver_id,\r\n              },\r\n              {\r\n                field: \"Conductor ID\",\r\n                content: conductor_id,\r\n              }\r\n            ]}\r\n          >\r\n            <TableHeader>\r\n              <TableCell weighting={0.6}>\r\n                Field\r\n              </TableCell>\r\n              <TableCell>\r\n                Content\r\n              </TableCell>\r\n            </TableHeader>\r\n            <TableBody>\r\n              <DataTableCell weighting={0.6} getContent={(r) => r.field} />\r\n              <DataTableCell getContent={(r) => r.content} />\r\n            </TableBody>\r\n          </Table>\r\n        </View>\r\n        <Image\r\n          src=\"/complaint_footer.png\"\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"auto\",\r\n            position: \"absolute\",\r\n            bottom: \"0px\",\r\n          }}\r\n        />\r\n      </Page>\r\n    </Document>\r\n  );\r\n  \r\n  export default TransportComplaint;\r\n  ","import React from 'react'\r\nimport { makeStyles, Box, Typography, Link, ButtonGroup, Button, TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, IconButton, Collapse, CircularProgress } from '@material-ui/core';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport { PDFDownloadLink } from '@react-pdf/renderer';\r\nimport TelecomComplaint from '../Complaints/TelecomComplaint';\r\nimport { GetAppRounded } from '@material-ui/icons';\r\nimport { useSelector } from 'react-redux';\r\nimport { getUser } from '../../store/slices/auth';\r\nimport HealthcareComplaint from '../Complaints/HealthcareComplaint';\r\nimport Loader from 'react-loader-spinner';\r\nimport TransportComplaint from './../Complaints/TransportComplaint';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    height: \"fit-content\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  container_bot_text: {\r\n    maxWidth: \"70%\",\r\n    borderRadius: \"1.2rem 1.2rem 1.2rem 0\",\r\n    width: \"fit-content\",\r\n    backgroundColor: theme.palette.primary.contrastText,\r\n    padding: theme.spacing(2, 3),\r\n    marginLeft: theme.spacing(2)\r\n  },\r\n  container_bot_buttons: {\r\n    maxWidth: \"70%\",\r\n    width: \"fit-content\",\r\n    marginLeft: theme.spacing(3)\r\n  },\r\n  container_bot_table: {\r\n    maxWidth: \"90%\",\r\n    width: \"fit-content\",\r\n    marginLeft: theme.spacing(2)\r\n  },\r\n  container_bot_complaint: {\r\n    maxWidth: \"50%\",\r\n    borderRadius: \"1.2rem 1.2rem 1.2rem 0\",\r\n    width: \"fit-content\",\r\n    backgroundColor: theme.palette.primary.contrastText,\r\n    padding: theme.spacing(2, 3),\r\n    marginLeft: theme.spacing(2)\r\n  },\r\n  container_user: {\r\n    maxWidth: \"70%\",\r\n    borderRadius: \"1.2rem 1.2rem 0 1.2rem\",\r\n    width: \"fit-content\",\r\n    backgroundColor: theme.palette.secondary.main,\r\n    padding: theme.spacing(2, 3),\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: \"auto\"\r\n  },\r\n  font: {\r\n    fontWeight: \"600\",\r\n    color: \"black\",\r\n    textDecoration: 'none'\r\n  },\r\n  link: {\r\n    fontWeight: 600,\r\n  },\r\n  row_root: {\r\n    '& > *': {\r\n      borderBottom: 'unset',\r\n    },\r\n  },\r\n}))\r\n\r\nfunction Row(props) {\r\n  const { row } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow className={classes.row_root}>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {row.package_name}\r\n        </TableCell>\r\n        <TableCell align=\"right\">Rs. {row.value}</TableCell>\r\n        <TableCell>\r\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box>\r\n              <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableBody>\r\n                  <TableRow>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      Description\r\n                    </TableCell>\r\n                    <TableCell>{row.description}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      How to Activate\r\n                    </TableCell>\r\n                    <TableCell>{row.activation_method}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      Visit Offcial Website\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Button size=\"small\" href={row.url} color=\"primary\" variant=\"outlined\" target=\"_blank\">\r\n                        More Details\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst ChatMessage = ({ sender, sendMessage = \"\", type, text = \"\", image = \"\", buttons = [], map = \"\", table = [], complaint = {}, button = {} }) => {\r\n  const displayName = useSelector(getUser)\r\n  const classes = useStyles()\r\n  return (\r\n    <Box className={classes.root}>\r\n      {sender === 'bot' ?\r\n        <Box data-testid='bot'>\r\n          {type === \"text\" &&\r\n            <Box className={classes.container_bot_text}>\r\n              <Typography variant=\"body1\" className={classes.font}>{text}</Typography>\r\n            </Box>\r\n          }\r\n          {type === \"image\" && <Link className={classes.link} href={`${image}`}>{image}</Link>}\r\n          {type === \"buttons\" &&\r\n            <Box className={classes.container_bot_buttons} >\r\n              <ButtonGroup size=\"small\" disableElevation variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\r\n                {buttons && sendMessage && buttons.map((button, index) => (\r\n                  <Button onClick={() => sendMessage(button.payload, button.title)} key={`${index}`}>{button.title}</Button>\r\n                ))}\r\n                {buttons && !sendMessage && buttons.map((button, index) => (\r\n                  <Button key={`${index}`}>{button.title}</Button>\r\n                ))}\r\n\r\n              </ButtonGroup>\r\n            </Box>\r\n          }\r\n          {type === \"table\" &&\r\n            <Box className={classes.container_bot_table} >\r\n              <TableContainer component={Paper}>\r\n                <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Package</TableCell>\r\n                      <TableCell align=\"right\">Value</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {table && table.map((row) => (\r\n                      <Row key={row.name} row={row} />\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Box>\r\n          }\r\n          {type === \"button\" &&\r\n            <Box className={classes.container_bot_buttons} >\r\n              <Button disableElevation variant=\"contained\" color=\"primary\" size=\"small\" href={button.url} target=\"_blank\">\r\n                {button.title}\r\n              </Button>\r\n            </Box>\r\n          }\r\n          {type === \"complaint\" &&\r\n            <Box className={classes.container_bot_complaint} >\r\n              {complaint.domain === \"telecom\" &&\r\n                <PDFDownloadLink document={<TelecomComplaint issue={complaint.title} description={complaint.description} name={complaint.fullname} phone={complaint.contactnum} email={complaint.email} />} fileName={`complaint_preview_${displayName.first_name}.pdf`} >\r\n                  {({ blob, url, loading, error }) =>\r\n                    loading ?\r\n                      <>\r\n                        <Typography variant=\"body1\" className={classes.font}>Document Loading...</Typography>\r\n                        <CircularProgress />\r\n                      </> :\r\n                      <>\r\n                        <Typography variant=\"body1\" className={classes.font}>Download</Typography>\r\n                        <IconButton aria-label=\"download\">\r\n                          <GetAppRounded />\r\n                        </IconButton>\r\n                      </>\r\n                  }\r\n                </PDFDownloadLink>\r\n              }\r\n              {complaint.domain === \"healthcare\" &&\r\n                <PDFDownloadLink document={<HealthcareComplaint issue={complaint.title} description={complaint.description} name={complaint.fullname} phone={complaint.contactnum} email={complaint.email} />} fileName={`complaint_preview_${displayName.first_name}.pdf`} >\r\n                  {({ blob, url, loading, error }) =>\r\n                    loading ?\r\n                      <>\r\n                        <Typography variant=\"body1\" className={classes.font}>Document Loading...</Typography>\r\n                        <CircularProgress />\r\n                      </> :\r\n                      <>\r\n                        <Typography variant=\"body1\" className={classes.font}>Download</Typography>\r\n                        <IconButton aria-label=\"download\">\r\n                          <GetAppRounded />\r\n                        </IconButton>\r\n                      </>\r\n                  }\r\n                </PDFDownloadLink>\r\n              }\r\n              {complaint.domain === \"transport\" &&\r\n                <PDFDownloadLink document={<TransportComplaint title={complaint.title} description={complaint.description} vehicle_no={complaint.vehical_number} driver_id={complaint.driver_id} conductor_id={complaint.conductor_id} />} fileName={`complaint_preview_${displayName.first_name}.pdf`} >\r\n                  {({ blob, url, loading, error }) =>\r\n                    loading ?\r\n                      <>\r\n                        <Typography variant=\"body1\" className={classes.font}>Document Loading...</Typography>\r\n                        <CircularProgress />\r\n                      </> :\r\n                      <>\r\n                        <Typography variant=\"body1\" className={classes.font}>Download</Typography>\r\n                        <IconButton aria-label=\"download\">\r\n                          <GetAppRounded />\r\n                        </IconButton>\r\n                      </>\r\n                  }\r\n                </PDFDownloadLink>\r\n              }\r\n            </Box>\r\n          }\r\n          {type === \"loading\" &&\r\n            <Box className={classes.container_bot_text} >\r\n              <Loader type=\"ThreeDots\" color=\"#3A637E\" height={25} width={25} />\r\n            </Box>\r\n          }\r\n\r\n        </Box>\r\n        :\r\n        <Box data-testid='user' className={classes.container_user}>\r\n          <Typography variant=\"body1\" className={classes.font}>{text}</Typography>\r\n        </Box>\r\n      }\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default ChatMessage\r\n","import React, { useState } from 'react'\r\nimport { makeStyles, IconButton, ButtonGroup, TextField } from '@material-ui/core'\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport { useSpeechRecognition } from 'react-speech-recognition';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.secondary.light,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: \"100%\"\r\n  },\r\n  text: {\r\n    width: \"90%\",\r\n    padding: theme.spacing(0, 3)\r\n  }\r\n}))\r\n\r\nconst CustomTextArea = ({ sendMessage, toggleRecord }) => {\r\n  const classes = useStyles()\r\n  const [message, updateMessage] = useState(\"\")\r\n\r\n  const { listening } = useSpeechRecognition()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TextField\r\n        className={classes.text}\r\n        multiline={true}\r\n        maxRows={1}\r\n        value={message}\r\n        onChange={e => updateMessage(e.target.value)}\r\n        InputProps={{ 'data-testid': 'message', disableUnderline: true }}\r\n      />\r\n      <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\r\n        <IconButton data-testid='voice-btn' onClick={() => {\r\n          toggleRecord()\r\n        }}>\r\n          {listening ? <MicIcon color=\"error\" /> : <MicIcon />}\r\n        </IconButton>\r\n        <IconButton data-testid='send-btn' onClick={() => {\r\n          sendMessage(message)\r\n          updateMessage(\"\")\r\n        }}>\r\n          <SendIcon />\r\n        </IconButton>\r\n      </ButtonGroup>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CustomTextArea\r\n","import { createSlice, createSelector } from '@reduxjs/toolkit';\r\n\r\nconst slice = createSlice({\r\n\tname: 'chatbot',\r\n\tinitialState: {\r\n\t\tchat: [],\r\n\t\trating: 0\r\n\t},\r\n\treducers: {\r\n\t\tupdateChat: (chatbot, action) => {\r\n\t\t\tchatbot.chat = action.payload;\r\n\t\t},\r\n\t\tupdateRating: (chatbot, action) => {\r\n\t\t\tchatbot.rating = action.payload;\r\n\t\t}\r\n\t}\r\n});\r\n\r\nexport const { updateChat, updateRating } = slice.actions;\r\n\r\nexport default slice.reducer;\r\n\r\nexport const getChat = createSelector(\r\n\tstate => state.entities.chatbot,\r\n\tchatbot => chatbot.chat\r\n);\r\n\r\nexport const getRating = createSelector(\r\n\tstate => state.entities.chatbot,\r\n\tchatbot => chatbot.rating\r\n);\r\n","import axios from 'axios';\r\n\r\nconst AxiosInstance = axios.create({\r\n\tbaseURL: process.env.REACT_APP_SERVER_URL\r\n});\r\n\r\nexport default AxiosInstance;\r\n","import user from './modules/user';\r\nimport chatbot from './modules/chatbot';\r\nimport feedback from './modules/feedback';\r\nimport newsfeed from './modules/newsfeed';\r\n\r\nconst api = {\r\n\tuser: user,\r\n\tchatbot: chatbot,\r\n\tfeedback: feedback,\r\n\tnewsfeed: newsfeed\r\n};\r\n\r\nexport default api;\r\n","import AxiosInstance from './../../helpers/AxiosInstance';\r\n\r\nconst user = {\r\n\tPOST: {\r\n\t\tasync signIn(email, password) {\r\n\t\t\treturn AxiosInstance({\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t},\r\n\t\t\t\turl: '/auth/jwt/create/',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\temail: email,\r\n\t\t\t\t\tpassword: password\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\tasync signUp(\r\n\t\t\tfirst_name,\r\n\t\t\tlast_name,\r\n\t\t\temail,\r\n\t\t\tuser_type,\r\n\t\t\tpassword,\r\n\t\t\tre_password\r\n\t\t) {\r\n\t\t\treturn AxiosInstance({\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t},\r\n\t\t\t\turl: '/auth/users/',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tfirst_name: first_name,\r\n\t\t\t\t\tlast_name: last_name,\r\n\t\t\t\t\temail: email,\r\n\t\t\t\t\tuser_type: user_type,\r\n\t\t\t\t\tpassword: password,\r\n\t\t\t\t\tre_password: re_password\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\tasync forgotPassword(email) {\r\n\t\t\treturn AxiosInstance({\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\turl: '/auth/users/reset_password/',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\temail: email\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\tasync resetPassword(uid, token, new_password, re_password) {\r\n\t\t\treturn AxiosInstance({\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t},\r\n\t\t\t\turl: '/auth/users/reset_password_confirm/',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tuid: uid,\r\n\t\t\t\t\ttoken: token,\r\n\t\t\t\t\tnew_password: new_password,\r\n\t\t\t\t\tre_password: re_password\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\tasync activateUser(uid, token) {\r\n\t\t\treturn AxiosInstance({\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\turl: '/auth/users/activation/',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tuid: uid,\r\n\t\t\t\t\ttoken: token\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\tasync refreshToken(token) {\r\n\t\t\treturn AxiosInstance({\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\turl: '/auth/jwt/refresh/',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\trefresh: token\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\tasync verifyToken(token) {\r\n\t\t\treturn AxiosInstance({\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\turl: '/auth/jwt/verify/',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t},\r\n\t\t\t\tdata: {\r\n\t\t\t\t\ttoken: token\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\tGET: {\r\n\t\tasync getUser(token) {\r\n\t\t\treturn AxiosInstance({\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `JWT ${token}`\r\n\t\t\t\t},\r\n\t\t\t\turl: '/auth/users/me'\r\n\t\t\t});\r\n\t\t},\r\n\t\tasync getUsers(token) {\r\n\t\t\treturn AxiosInstance({\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `JWT ${token}`\r\n\t\t\t\t},\r\n\t\t\t\turl: '/auth/users/'\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport default user;\r\n","import AxiosInstance from './../../helpers/AxiosInstance';\r\n\r\nconst chatbot = {\r\n\tPOST: {\r\n\t\tasync chat(token, sender, message, domain) {\r\n\t\t\treturn AxiosInstance({\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\tAuthorization: `JWT ${token}`\r\n\t\t\t\t},\r\n\t\t\t\turl: `/assistant/${domain}/`,\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tsender: sender,\r\n\t\t\t\t\tmessage: message\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport default chatbot;\r\n","import AxiosInstance from './../../helpers/AxiosInstance';\r\n\r\nconst feedback = {\r\n\tPOST: {\r\n\t\tasync feedback(token, user_id, domain, rating, feedback, chatsession) {\r\n\t\t\treturn AxiosInstance({\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\tAuthorization: `JWT ${token}`\r\n\t\t\t\t},\r\n\t\t\t\turl: `/feedback/`,\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tuser_id: user_id,\r\n\t\t\t\t\trating: rating,\r\n\t\t\t\t\tfeedback: feedback,\r\n\t\t\t\t\tdomain: domain,\r\n\t\t\t\t\tchatsession: chatsession\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\tGET: {\r\n\t\tasync sessions(token) {\r\n\t\t\treturn AxiosInstance({\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `JWT ${token}`\r\n\t\t\t\t},\r\n\t\t\t\turl: '/feedback/'\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\tPUT: {\r\n\t\tasync updateFeedback(\r\n\t\t\tid,\r\n\t\t\tdomain,\r\n\t\t\trating,\r\n\t\t\tchatsession,\r\n\t\t\tfeedback,\r\n\t\t\tuser_id,\r\n\t\t\ttoken\r\n\t\t) {\r\n\t\t\treturn AxiosInstance({\r\n\t\t\t\tmethod: 'PUT',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `JWT ${token}`\r\n\t\t\t\t},\r\n\t\t\t\turl: `/feedback/update/${id}`,\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tdomain: domain,\r\n\t\t\t\t\trating: rating,\r\n\t\t\t\t\tchatsession: chatsession,\r\n\t\t\t\t\tfeedback: feedback,\r\n\t\t\t\t\tresolved: true,\r\n\t\t\t\t\tuser_id: user_id\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport default feedback;\r\n","import AxiosInstance from './../../helpers/AxiosInstance';\r\n\r\nconst newsfeed = {\r\n\tGET: {\r\n\t\tasync getNews(token, domain) {\r\n\t\t\treturn AxiosInstance({\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Authorization': `JWT ${token}`\r\n\t\t\t\t},\r\n\t\t\t\turl: `/newsfeed/news/domain/${domain}`\r\n\t\t\t});\r\n\t\t},\r\n        async getInstructions(token, domain) {\r\n\t\t\treturn AxiosInstance({\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Authorization': `JWT ${token}`\r\n\t\t\t\t},\r\n\t\t\t\turl: `/newsfeed/instructions/domain/${domain}`\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\tPOST: {\r\n\t\tasync addNews(token, domain, title, body, date, img_url) {\r\n\t\t\treturn AxiosInstance({\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Authorization': `JWT ${token}`\r\n\t\t\t\t},\r\n\t\t\t\turl: `/newsfeed/news/`,\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tdomain: domain,\r\n\t\t\t\t\ttitle: title,\r\n\t\t\t\t\tbody: body,\r\n\t\t\t\t\tdate: date,\r\n\t\t\t\t\timg_url: img_url\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\tasync addInstructions(token, domain, label, body) {\r\n\t\t\treturn AxiosInstance({\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Authorization': `JWT ${token}`\r\n\t\t\t\t},\r\n\t\t\t\turl: `/newsfeed/instructions/`,\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tdomain: domain,\r\n\t\t\t\t\tlabel: label,\r\n\t\t\t\t\tbody: body,\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\tDELETE: {\r\n\t\tasync deleteInstructions(token, id) {\r\n\t\t\treturn AxiosInstance({\r\n\t\t\t\tmethod: 'DELETE',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Authorization': `JWT ${token}`\r\n\t\t\t\t},\r\n\t\t\t\turl: `/newsfeed/instructions/details/${id}`\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n    \r\n};\r\n\r\nexport default newsfeed;","import { Box, Card } from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { makeStyles, IconButton } from '@material-ui/core';\r\nimport ChatMessage from './ChatMessage';\r\nimport CustomTextArea from './CustomTextArea';\r\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\r\nimport clsx from 'clsx';\r\nimport { Typography } from '@material-ui/core';\r\nimport StopIcon from '@material-ui/icons/Stop';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getToken, getUser } from '../../store/slices/auth';\r\nimport { updateChat } from '../../store/slices/chatbot';\r\nimport api from '../../api';\r\nimport { toast } from 'react-toastify';\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3, 3, 0, 3),\r\n    backgroundColor: theme.palette.primary.light,\r\n    height: \"70vh\",\r\n    width: \"100%\",\r\n  },\r\n  body: {\r\n    backgroundColor: theme.palette.secondary.light,\r\n    height:\"75%\", \r\n    padding: theme.spacing(2, 0),\r\n  },\r\n  body_scroll:{\r\n    height: \"100%\",\r\n  },\r\n\r\n  flexRow: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  flexColumn: {\r\n    flexDirection: \"column\"\r\n  },\r\n  textArea: {\r\n    height: \"25%\",\r\n    width: \"100%\",\r\n  },\r\n  row: {\r\n    width: \"100%\",\r\n    margin: theme.spacing(1, 0)\r\n  },\r\n  buttonGroup: {\r\n    width: \"fit-content\",\r\n    marginLeft: \"auto\",\r\n    color: \"white\"\r\n  }\r\n}))\r\n\r\nconst Chatbot = ({ finish, domain }) => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n\r\n  const displayName = useSelector(getUser)\r\n  const token = useSelector(getToken)\r\n\r\n  const [chatMessages, updateChatMessages] = useState([\r\n    { sender: \"bot\", type: \"text\", text: `Hi, ${displayName.first_name}` },\r\n  ])\r\n  const {\r\n    transcript,\r\n    listening,\r\n    resetTranscript,\r\n  } = useSpeechRecognition()\r\n\r\n  const updateChatBox = async (message, displayMessage='') => {\r\n    if (!message) return\r\n    try {\r\n      if (displayMessage){\r\n        updateChatMessages([...chatMessages, { sender: displayName.first_name, type: \"text\", text: displayMessage }, { sender: \"bot\", type: \"loading\", text: \"\" }])\r\n      }else{\r\n        updateChatMessages([...chatMessages, { sender: displayName.first_name, type: \"text\", text: message }, { sender: \"bot\", type: \"loading\", text: \"\" }])\r\n      }\r\n        \r\n      const reply = await api.chatbot.POST.chat(token.access, displayName.first_name, message, domain)\r\n      let temp = []\r\n      for (let r of reply.data) {\r\n        if (r.text) {\r\n          temp = [...temp, { sender: \"bot\", type: \"text\", text: r.text }]\r\n        } \r\n        if (r.image) {\r\n          temp = [...temp, { sender: \"bot\", type: \"image\", image: r.image }]\r\n        } \r\n        if (r.buttons) {\r\n          temp = [...temp, { sender: \"bot\", type: \"buttons\", buttons: r.buttons }]\r\n        } \r\n        if (r.custom) {\r\n            if(r.custom.mapLink){\r\n              temp = [...temp, { sender: \"bot\", type: \"map\", map: r.custom.mapLink }]\r\n            }\r\n            else if (r.custom.packages){\r\n              temp = [...temp, { sender: \"bot\", type: \"table\", table: r.custom.packages }]\r\n            }\r\n            else if (r.custom.complaint){\r\n              temp = [...temp, { sender: \"bot\", type: \"complaint\", complaint: r.custom.complaint }]\r\n            }\r\n            else if (r.custom.button){\r\n              \r\n              temp = [...temp, { sender: \"bot\", type: \"button\", button: r.custom.button }]\r\n            }\r\n        } \r\n      }\r\n      if (displayMessage){\r\n        updateChatMessages([...chatMessages, { sender: displayName.first_name, type: \"text\", text: displayMessage }, ...temp])\r\n      }else{\r\n        updateChatMessages([...chatMessages, { sender: displayName.first_name, type: \"text\", text: message }, ...temp])\r\n      }\r\n      \r\n    } catch (err) {\r\n      console.log(err.message)\r\n      toast.error(\"Message send failed\")\r\n      return\r\n    }\r\n  }\r\n\r\n  const toggleRecord = () => {\r\n    if (!listening) {\r\n      SpeechRecognition.startListening()\r\n    }\r\n    else {\r\n      SpeechRecognition.stopListening()\r\n      resetTranscript()\r\n      updateChatBox(transcript)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n  }, [updateChatMessages])\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n        <Card className={classes.body}>\r\n          <ScrollToBottom className={classes.body_scroll}>\r\n            {chatMessages.map((message, index) => <ChatMessage sendMessage={updateChatBox} {...message} key={`${index}`} />)}\r\n          </ScrollToBottom>\r\n        </Card>\r\n      <div className={clsx(classes.textArea, classes.flexColumn, classes.flexRow)}>\r\n        <CustomTextArea sendMessage={updateChatBox} toggleRecord={() => toggleRecord()} />\r\n        <Box className={classes.row}>\r\n          <Box className={clsx(classes.flexRow, classes.buttonGroup)}>\r\n            <Typography variant=\"body1\">End Conversation</Typography>\r\n            <IconButton\r\n              color=\"secondary\"\r\n              onClick={async () => {\r\n                await dispatch(updateChat(chatMessages))\r\n                finish()\r\n              }}>\r\n              <StopIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Box>\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Chatbot\r\n","import React, { useState } from 'react'\r\nimport { ButtonGroup, Card, Container, IconButton, makeStyles, TextField, Typography } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  card: {\r\n    height: \"fit-content\",\r\n    padding: theme.spacing(4)\r\n  },\r\n  flex: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  icon_group: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  text: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.secondary.light,\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  text_area: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  text_style: {\r\n    textAlign: \"center\"\r\n  },\r\n  feedback: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}))\r\n\r\nconst Feedback = ({ submit }) => {\r\n  const classes = useStyles()\r\n  const [index, setIndex] = useState(0)\r\n  const [selected, updateSelected] = useState([0, 0, 0, 0, 0])\r\n  const [feedbackDisplay, setFeedbackDisplay] = useState(false)\r\n  const [feedback, updateFeedback] = useState(\"\")\r\n\r\n  const click = (index) => {\r\n    let tempList = [0, 0, 0, 0, 0]\r\n    for (let i = 0; i <= index; i++) {\r\n      tempList[i] = 1\r\n    }\r\n    updateSelected(tempList)\r\n    if (index < 3) {\r\n      setIndex(index)\r\n      setTimeout(() => {\r\n        setFeedbackDisplay(true)\r\n      }, 1000)\r\n    } else {\r\n      setTimeout(() => {\r\n        submit(index+1, 'none')\r\n      }, 1000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container className={clsx(classes.root, classes.flex)}>\r\n      <Card className={clsx(classes.card, classes.flex)} style={{ flexDirection: \"column\" }}>\r\n        <Typography variant=\"h6\" className={classes.text_style}>Please provide your valueble rating<br />to improve our chatbot</Typography>\r\n        <ButtonGroup className={classes.icon_group}>\r\n          {selected.map((select, index) => {\r\n            return (\r\n              <IconButton key={index} data-testid = {`star-${index+1}`} onClick={() => click(index)}>\r\n                {select ? <StarIcon style={{ color: \"#EAED15\" }} /> : <StarBorderIcon />}\r\n              </IconButton>\r\n            )\r\n          })}\r\n        </ButtonGroup>\r\n        {feedbackDisplay &&\r\n          <div data-testid='feedback-form' className={classes.feedback}>\r\n            <Typography variant=\"h6\" className={classes.text_style}>Please provide some feedback<br /> on what went wrong</Typography>\r\n            <div className={classes.text_area}>\r\n              <TextField\r\n                className={classes.text}\r\n                multiline={true}\r\n                maxRows={1}\r\n                value={feedback}\r\n                onChange={e => updateFeedback(e.target.value)}\r\n                InputProps={{ 'data-testid':'feedback-text', disableUnderline: true }}\r\n              />\r\n              <IconButton data-testid='submit-btn' onClick={() => submit(index+1, feedback)}>\r\n                <SendIcon />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n        }\r\n      </Card>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Feedback\r\n","import {\r\n  Card,\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n  AppBar,\r\n  Tabs,\r\n  Tab,\r\n  CardHeader,\r\n  Avatar,\r\n  Divider,\r\n  Chip,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, classes, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      align=\"left\"\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Paper className={classes.newsfeed_body}>{children}</Paper>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n    padding: \"20px\",\r\n  },\r\n  title: {\r\n    color: theme.palette.secondary.light,\r\n  },\r\n  newsfeed: {\r\n    marginTop: \"20px\",\r\n    padding: \"10px\",\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  newsfeed_body: {\r\n    margin: 0,\r\n    padding: \"10px\",\r\n    backgroundColor: theme.palette.secondary.light,\r\n  },\r\n  newsfeed_post: {\r\n    padding: \"0px\",\r\n    width: \"100%\",\r\n    marginBottom: \"20px\"\r\n  },\r\n  newsfeed_scroll: {\r\n    height: \"20rem\",\r\n    overflowY: \"auto\",\r\n  },\r\n  newsfeed_post_body: {\r\n    padding: \"20px\",\r\n  },\r\n  body: {\r\n    paddingTop: \"5px\",\r\n    paddingLeft: \"5px\"\r\n  },\r\n  askme: {\r\n    marginLeft: \"15px\"\r\n  }\r\n}));\r\n\r\nconst Newsfeed = ({ domain, domainImg, posts, instructions }) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justifyContent=\"flex-start\"\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={12}>\r\n            <Grid container alignItems=\"center\">\r\n              <Grid item xs={3}>\r\n                <img src={domainImg} height=\"auto\" width=\"60%\" alt=\"\" />\r\n              </Grid>\r\n              <Grid item xs={9} className={classes.title}>\r\n                <Typography variant=\"h3\">{domain}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <AppBar position=\"static\">\r\n              <Tabs\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"simple tabs example\"\r\n              >\r\n                <Tab label=\"Newsfeed\" {...a11yProps(0)} />\r\n                <Tab label=\"How to use\" {...a11yProps(1)} />\r\n              </Tabs>\r\n            </AppBar>\r\n            <div className={classes.newsfeed_scroll}>\r\n              <TabPanel value={value} index={0} classes={classes}>\r\n                {posts && posts.map((message, index) => (\r\n                  <Card className={classes.newsfeed_post} key={`${index}`}>\r\n                    <img src={message.img_url} height=\"auto\" width=\"100%\" alt=\"\" />\r\n                    <CardHeader\r\n                      avatar={\r\n                        <Avatar aria-label=\"recipe\" src=\"/logo.svg\" className={classes.avatar}>\r\n                          Wingman Development team\r\n                        </Avatar>\r\n                      }\r\n                      title={\r\n                        <Typography align=\"left\" variant=\"h6\">\r\n                          {message.title}\r\n                        </Typography>\r\n                      }\r\n                      subheader={\r\n                        <Typography align=\"left\" variant=\"subtitle2\">\r\n                          {message.date}\r\n                        </Typography>\r\n                      }\r\n                    />\r\n                    <Divider />\r\n\r\n                    <div className={classes.newsfeed_post_body}>\r\n                      <Typography align=\"left\" variant=\"body2\">\r\n                        {message.body}\r\n                      </Typography>\r\n                    </div>\r\n                  </Card>\r\n                ))}\r\n              </TabPanel>\r\n              <TabPanel value={value} index={1} classes={classes}>\r\n                <Typography className={classes.askme} variant='h4'>Ask ME</Typography>\r\n                {instructions && instructions.map((inst, index) => (\r\n                  <Box marginTop='10px' padding=\"10px\">\r\n                    <Chip size=\"medium\" label={inst.label} color=\"primary\" />\r\n                    <Typography className={classes.body} variant='body1' >{inst.body}</Typography>\r\n                  </Box>\r\n                ))}\r\n              </TabPanel>\r\n            </div>\r\n\r\n\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Newsfeed;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Modal,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport Chatbot from \"../../components/Chatbot/Chatbot\";\r\nimport Feedback from \"./../../components/Chatbot/Feedback\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getUserSignedIn, getUser, getToken } from \"./../../store/slices/auth\";\r\nimport { Redirect, useHistory } from \"react-router\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport api from \"./../../api/index\";\r\nimport { getChat } from \"./../../store/slices/chatbot\";\r\nimport Newsfeed from \"../../components/Chatbot/Newsfeed\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    background: `linear-gradient(45deg, ${theme.palette.primary.main} 30%, ${theme.palette.primary.dark} 90%)`,\r\n    minHeight: \"calc(100vh - 115px)\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingTop: \"20px\",\r\n    paddingBottom: \"20px\",\r\n  },\r\n  row: {\r\n    marginTop: theme.spacing(5),\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.contrastText,\r\n    fontWeight: \"600\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst PublicTransportation = () => {\r\n  const classes = useStyles();\r\n  const signedIn = useSelector(getUserSignedIn);\r\n  const chat = useSelector(getChat);\r\n  const user = useSelector(getUser);\r\n  const token = useSelector(getToken);\r\n  const [newsfeed, setNewsfeed] = useState({ \"posts\": [], \"instructions\": [] })\r\n  const history = useHistory();\r\n\r\n  const bk_1 = useMediaQuery((theme) => theme.breakpoints.up(\"lg\"));\r\n\r\n  const [displayFeedback, updateDisplayFeedback] = useState(false);\r\n\r\n  const submit = async (index, feedback) => {\r\n    updateDisplayFeedback(false);\r\n    const chatJSON = JSON.stringify(chat);\r\n    try {\r\n      await api.feedback.POST.feedback(\r\n        token.access,\r\n        user.id,\r\n        \"transport\",\r\n        index,\r\n        feedback,\r\n        chatJSON\r\n      );\r\n      toast.success(\"Feedback added\");\r\n      setTimeout(() => {\r\n        history.push(\"/home\");\r\n      }, 2000);\r\n    } catch (err) {\r\n      console.log(err.response.message);\r\n      toast.error(\"Something went wrong\");\r\n    }\r\n  };\r\n  const getNewsfeedContent = async () => {\r\n    try {\r\n      let posts = await api.newsfeed.GET.getNews(token.access, \"transport\")\r\n      let instructions = await api.newsfeed.GET.getInstructions(token.access, \"transport\")\r\n      setNewsfeed({ \"posts\": posts.data, \"instructions\": instructions.data })\r\n    }\r\n    catch (err) {\r\n      toast.error(\"Data fetch failed\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getNewsfeedContent()\r\n  }, [])\r\n\r\n  if (!signedIn) return <Redirect to=\"/home\" />;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container>\r\n        <ToastContainer />\r\n        <Grid\r\n          container\r\n          alignItems=\"center\"\r\n          justifyContent={bk_1 ? \"space-between\" : \"space-around\"}\r\n          spacing={4}\r\n        >\r\n          <Grid item alignItems=\"center\" sm={12} md={6}>\r\n            <Newsfeed\r\n              domain=\"Public Transport\"\r\n              domainImg=\"/bus_1.svg\"\r\n              posts={newsfeed.posts}\r\n              instructions={newsfeed.instructions}\r\n            />\r\n          </Grid>\r\n          <Grid item alignItems=\"center\" justifyContent=\"center\" sm={12} md={5}>\r\n            <Chatbot\r\n              finish={() => updateDisplayFeedback(true)}\r\n              domain=\"transport\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Modal\r\n          open={displayFeedback}\r\n          aria-labelledby=\"simple-modal-title\"\r\n          aria-describedby=\"simple-modal-description\"\r\n        >\r\n          <Feedback submit={(index, feedback) => submit(index, feedback)} />\r\n        </Modal>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PublicTransportation;\r\n","import { Box, Card, Typography, makeStyles, Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  box: {\r\n    margin: theme.spacing(3),\r\n    height: \"250px\",\r\n    width: \"250px\",\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  weighted: {\r\n    fontWeight: \"600\"\r\n  },\r\n  row: {\r\n    paddingTop: theme.spacing(2),\r\n  }\r\n}))\r\n\r\nconst CountBox = ({ title, subtitle, count, changeGraph, disableGraph = false }) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <Card className={classes.box}>\r\n      <Typography data-testid='title' variant=\"subtitle1\" className={clsx(classes.weighted, classes.row)}>\r\n        {title}\r\n      </Typography>\r\n      <Typography data-testid='subtitle' variant=\"subtitle2\" className={classes.weighted}>\r\n        {subtitle}\r\n      </Typography>\r\n      <Typography data-testid='count' variant=\"h3\" className={clsx(classes.weighted, classes.row)}>\r\n        {count}\r\n      </Typography>\r\n      {!disableGraph && <Box className={classes.row}>\r\n        <Button\r\n          data-testid='grp-btn'\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          className={classes.weighted}\r\n          onClick={() => changeGraph()}\r\n        >\r\n          View Graph\r\n        </Button>\r\n      </Box>}\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CountBox","import { Card } from '@material-ui/core';\r\nimport React, { useEffect } from 'react'\r\nimport { CartesianGrid, Legend, LineChart, Tooltip, XAxis, YAxis, Line } from 'recharts';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport moment from 'moment';\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  }\r\n}))\r\n\r\nconst Graph = ({ title, format, data }) => {\r\n  const classes = useStyle()\r\n  let x_format = \"MMM MMMM\"\r\n\r\n  useEffect(() => {\r\n    if (format === \"date\") x_format = \"Do\"\r\n  }, [format])\r\n\r\n  const graph_data = [\r\n    {\r\n      \"name\": `${moment().add(-4, format).format(x_format)}`.substr(0, 3),\r\n      \"users\": data[0]\r\n    },\r\n    {\r\n      \"name\": `${moment().add(-3, format).format(x_format)}`.substr(0, 3),\r\n      \"users\": data[1]\r\n    },\r\n    {\r\n      \"name\": `${moment().add(-2, format).format(x_format)}`.substr(0, 3),\r\n      \"users\": data[2]\r\n    },\r\n    {\r\n      \"name\": `${moment().add(-1, format).format(x_format)}`.substr(0, 3),\r\n      \"users\": data[3]\r\n    },\r\n    {\r\n      \"name\": `${moment().format(x_format)}`.substr(0, 3),\r\n      \"users\": data[4]\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <LineChart width={700} height={400} data={graph_data} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <CartesianGrid strokeDasharray=\"4 4\" />\r\n        <Tooltip />\r\n        <Legend verticalAlign=\"top\" height={36} />\r\n        <Line name={title} type=\"monotone\" dataKey=\"users\" stroke=\"#8884d8\" />\r\n      </LineChart>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Graph\r\n","import moment from 'moment';\r\n\r\nexport const MonthDivider = sessions => {\r\n\tlet MonthCounter = [0, 0, 0, 0, 0];\r\n\tfor (let session of sessions) {\r\n\t\tlet month = `${moment(session.timestamp).format('MMM MMMM')}`.substr(0, 3);\r\n\r\n\t\tswitch (month) {\r\n\t\t\tcase `${moment().format('MMM MMM')}`.substr(0, 3):\r\n\t\t\t\tMonthCounter[4] += 1;\r\n\t\t\t\tbreak;\r\n\t\t\tcase `${moment().add(-1, 'months').format('MMM MMM')}`.substr(0, 3):\r\n\t\t\t\tMonthCounter[3] += 1;\r\n\t\t\t\tbreak;\r\n\t\t\tcase `${moment().add(-2, 'months').format('MMM MMM')}`.substr(0, 3):\r\n\t\t\t\tMonthCounter[2] += 1;\r\n\t\t\t\tbreak;\r\n\t\t\tcase `${moment().add(-3, 'months').format('MMM MMM')}`.substr(0, 3):\r\n\t\t\t\tMonthCounter[1] += 1;\r\n\t\t\t\tbreak;\r\n\t\t\tcase `${moment().add(-4, 'months').format('MMM MMM')}`.substr(0, 3):\r\n\t\t\t\tMonthCounter[0] += 1;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log('Wrong input');\r\n\t\t}\r\n\t}\r\n\r\n\treturn MonthCounter;\r\n};\r\n","import { Accordion, AccordionDetails, AccordionSummary, IconButton, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { ExpandMore, Delete } from '@material-ui/icons'\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    margin: theme.spacing(1, 0)\r\n  }\r\n}))\r\n\r\nconst Instruction = ({ label, body, deleteIns }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Accordion style={{ width: \"100%\" }}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMore />}\r\n        >\r\n          <Typography variant=\"body2\">{label}</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography variant=\"caption\">{body}</Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n\r\n      <IconButton\r\n        onClick={() => deleteIns()}\r\n      >\r\n        <Delete />\r\n      </IconButton>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Instruction\r\n","import { useDispatch } from 'react-redux';\r\nimport { refreshToken } from '../store/slices/auth';\r\nimport api from './../api/index';\r\n\r\nconst TokenGenerator = async ({ access, refresh }) => {\r\n\ttry {\r\n\t\tconst result = await api.user.POST.verifyToken(access);\r\n\t} catch (err) {\r\n\t\tif (err.response.status === 401) {\r\n\t\t\tconst result = await api.user.POST.refreshToken(refresh);\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n};\r\n\r\nexport default TokenGenerator;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Box, Button, ButtonGroup, Dialog, DialogContent, Grid, makeStyles, MenuItem, TextField, Typography } from '@material-ui/core';\r\nimport CountBox from './../../components/CountBox';\r\nimport Graph from '../../components/Graph';\r\nimport api from './../../api/index';\r\nimport { MonthDivider } from './../../helpers/GraphDivider';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getUser, getToken, refreshToken, getUserSignedIn } from './../../store/slices/auth';\r\nimport { Redirect } from 'react-router';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from \"yup\"\r\nimport moment from \"moment\"\r\nimport clsx from 'clsx';\r\nimport Instruction from './../../components/Chatbot/Instruction';\r\nimport TokenGenerator from './../../helpers/TokenRefresh';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    background: `linear-gradient(45deg, ${theme.palette.primary.main} 30%, ${theme.palette.primary.dark} 90%)`,\r\n    minHeight: \"calc(100vh - 115px)\",\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  box: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\"\r\n  },\r\n  graph: {\r\n    height: \"100%\"\r\n  },\r\n  button_group: {\r\n    width: \"fit-content\",\r\n    fontSize: \"1rem\",\r\n    margin: theme.spacing(3, 0),\r\n    marginLeft: \"auto\"\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0, 2)\r\n  },\r\n  dialog_body: {\r\n    height: \"50vh\",\r\n    aspectRatio: \"16 / 10\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(3, 0)\r\n  },\r\n  row: {\r\n    marginBottom: theme.spacing(3),\r\n    width: \"100%\"\r\n  },\r\n  title: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    fontWeight: 600\r\n  },\r\n  submit: {\r\n    marginTop: \"auto\"\r\n  },\r\n  instruction_container: {\r\n    padding: theme.spacing(2, 1),\r\n    borderRadius: \"10px\",\r\n    backgroundColor: \"#ededed\",\r\n    maxHeight: \"55%\",\r\n    overflowY: \"auto\"\r\n  }\r\n}))\r\n\r\nconst Dashboard = () => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const signedIn = useSelector(getUserSignedIn)\r\n  const history = useHistory()\r\n\r\n  const [data, updateData] = useState({\r\n    title: \"\",\r\n    format: \"month\",\r\n    data: [0, 0, 0, 0, 0]\r\n  })\r\n  const [session_count, update_session_count] = useState([0, 0, 0, 0, 0])\r\n  const [feedback_count, update_feedback_count] = useState([0, 0, 0, 0, 0])\r\n\r\n  const [openDialog, toggleOpen] = useState(false)\r\n  const [infoType, changeInfoType] = useState(\"news\")\r\n  const [domain, setDomain] = useState(\"healthcare\")\r\n\r\n  const [users, setUsers] = useState([])\r\n  const [activeUsers, setActiveUsers] = useState(0)\r\n  const [registeredUsers, setRegisteredUsers] = useState(0)\r\n\r\n  const [news, setNews] = useState({\r\n    title: \"\",\r\n    date: moment().format(\"YYYY-MM-DD\"),\r\n    body: \"\",\r\n    imageUrl: \"/healthcare_launch.jpg\"\r\n  })\r\n\r\n  const [instruction, setInstruction] = useState({\r\n    label: \"\",\r\n    body: \"\"\r\n  })\r\n\r\n  const [instructions, updateInstructions] = useState([\r\n    {\r\n      label: \"Feature 1\",\r\n      body: \"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Quibusdam quidem possimus, modi fugit ex, enim hic iusto quasi facilis cupiditate voluptas tempora placeat nostrum, beatae obcaecati est illum at perspiciatis.\"\r\n    },\r\n    {\r\n      label: \"Feature 2\",\r\n      body: \"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Quibusdam quidem possimus, modi fugit ex, enim hic iusto quasi facilis cupiditate voluptas tempora placeat nostrum, beatae obcaecati est illum at perspiciatis.\"\r\n    }\r\n  ])\r\n\r\n  const user = useSelector(getUser)\r\n  const token = useSelector(getToken)\r\n\r\n  useEffect(() => {\r\n    async function loadFeatures() {\r\n      try {\r\n        const access = await TokenGenerator(token)\r\n        if (access) dispatch(refreshToken(access))\r\n\r\n        const ins = await api.newsfeed.GET.getInstructions(token.access, domain)\r\n        \r\n        updateInstructions(ins.data)\r\n        console.log(ins)\r\n      } catch (err) {\r\n        console.log(err.message)\r\n      }\r\n    }\r\n\r\n    loadFeatures()\r\n  }, [domain, infoType])\r\n\r\n\r\n  useEffect(() => {\r\n    async function loadData() {\r\n      try {\r\n        const access = await TokenGenerator(token)\r\n        if (access) dispatch(refreshToken(access))\r\n\r\n        const sessions = await api.feedback.GET.sessions(token.access)\r\n        const feedback = sessions.data.filter(s => s.feedback !== null)\r\n\r\n        update_session_count(MonthDivider(sessions.data))\r\n        update_feedback_count(MonthDivider(feedback))\r\n      } catch (err) {\r\n        console.log(err.message)\r\n      }\r\n    }\r\n\r\n    loadData()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function loadUsers() {\r\n      try {\r\n        const access = await TokenGenerator(token)\r\n        if (access) dispatch(refreshToken(access))\r\n\r\n        setActiveUsers(0)\r\n        setRegisteredUsers(0)\r\n\r\n        const user_data = await api.user.GET.getUsers(token.access)\r\n        setUsers(user_data.data)\r\n\r\n        for (let u of user_data.data) {\r\n          const last_login = moment(u.last_login)\r\n          const registered = moment(u.user_created)\r\n          if (moment().diff(last_login, 'hours') < 24) {\r\n            setActiveUsers(activeUsers => activeUsers + 1)\r\n          }\r\n          if (moment().diff(registered, 'days') < 30) {\r\n            setRegisteredUsers(registeredUsers => registeredUsers + 1)\r\n          }\r\n        }\r\n\r\n      } catch (err) {\r\n        console.log(err.message)\r\n      }\r\n    }\r\n\r\n    loadUsers()\r\n  }, [])\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const access = await TokenGenerator(token)\r\n      if (access) dispatch(refreshToken(access))\r\n      \r\n      await api.newsfeed.POST.addNews(token.access, domain, news.title, news.body, news.date, news.imageUrl)\r\n      toast.success(\"News added successfully\")\r\n    } catch (err) {\r\n      toast.error(\"Network error\")\r\n    }\r\n  }\r\n\r\n  // const formik_news = useFormik({\r\n  //   initialValues: {\r\n  //     title: \"\",\r\n  //     body: \"\"\r\n  //   },\r\n  //   validationSchema: Yup.object().shape({\r\n  //     title: Yup.string().required(\"This field is required\"),\r\n  //     body: Yup.string().required(\"This field is required\")\r\n  //   }),\r\n  //   onSubmit: handleSubmit\r\n  // })\r\n\r\n  const deleteIns = async (index, id) => {\r\n\r\n    try {\r\n      const access = await TokenGenerator(token)\r\n      if (access) dispatch(refreshToken(access))\r\n\r\n      await api.newsfeed.DELETE.deleteInstructions(token.access, id)\r\n      \r\n      let new_instructions = [...instructions.slice(0, index), ...instructions.slice(index + 1, instructions.length)]\r\n      updateInstructions(new_instructions)\r\n    } catch (err) {\r\n      console.log(err.message)\r\n      toast.error(\"Network error\")\r\n    }\r\n\r\n\r\n  }\r\n\r\n  const addInstruction = async () => {\r\n    try {\r\n      const access = await TokenGenerator(token)\r\n      if (access) dispatch(refreshToken(access))\r\n\r\n      await api.newsfeed.POST.addInstructions(token.access, domain, instruction.label, instruction.body)\r\n      \r\n      updateInstructions([...instructions, instruction])\r\n    } catch (err) {\r\n      console.log(err.message)\r\n      toast.error(\"Network error\")\r\n    }\r\n    \r\n  }\r\n\r\n  const changeGraph = (title, format, data) => {\r\n    updateData({\r\n      title: title,\r\n      format: format,\r\n      data: data\r\n    })\r\n  }\r\n\r\n  if (!signedIn || !user.is_superuser) return <Redirect to=\"/home\" />\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    <ToastContainer />\r\n      <Grid container justifyContent=\"space-around\" alignItems=\"center\">\r\n        <Grid container sm={12} md={6} xl={4}>\r\n          <Grid item xs={12} md={6} className={classes.box}>\r\n            <CountBox\r\n              title=\"Active Users\"\r\n              subtitle=\"(last 24h)\"\r\n              count={activeUsers}\r\n              disableGraph={true}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={6} className={classes.box}>\r\n            <CountBox\r\n              title=\"Registered Users\"\r\n              subtitle=\"(last month)\"\r\n              count={registeredUsers}\r\n              disableGraph={true}\r\n            />\r\n          </Grid>\r\n\r\n          {/* <Grid item xs={12} md={12} className={classes.box}>\r\n            <CountBox\r\n              title=\"Registered users\"\r\n              count={20}\r\n              disableGraph={true}\r\n            />\r\n          </Grid> */}\r\n\r\n          <Grid item xs={12} md={6} className={classes.box}>\r\n            <CountBox\r\n              title=\"Chat Sessions\"\r\n              subtitle=\"(last month)\"\r\n              count={session_count[4]}\r\n              changeGraph={() => changeGraph(\r\n                \"Chat Sessions\",\r\n                \"months\",\r\n                session_count\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={6} className={classes.box}>\r\n            <CountBox\r\n              title=\"Feedbacks\"\r\n              subtitle=\"(last month)\"\r\n              count={feedback_count[4]}\r\n              changeGraph={() => changeGraph(\r\n                \"Feedbacks\",\r\n                \"months\",\r\n                feedback_count\r\n              )}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container direction=\"column\" sm={12} md={8} xl={6} className={classes.graph}>\r\n          <Graph title={data.title} format={data.format} data={data.data} />\r\n\r\n          <ButtonGroup\r\n            color=\"secondary\"\r\n            size=\"medium\"\r\n            variant=\"contained\"\r\n            className={classes.button_group}\r\n          > <Button\r\n              className={classes.button}\r\n              href=\"http://20.185.23.148:8000/admin\"\r\n            >\r\n              Django Admin\r\n            </Button>\r\n            <Button\r\n              className={classes.button}\r\n              onClick={() => history.push('/admin/dashboard/feedback')}\r\n            >\r\n              View Feedback\r\n            </Button>\r\n            <Button\r\n              className={classes.button}\r\n              onClick={() => toggleOpen(true)}\r\n            >\r\n              Add Updates\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Dialog\r\n        open={openDialog}\r\n        onClose={() => {\r\n          toggleOpen(false)\r\n          setNews({\r\n            title: \"\",\r\n            date: moment().format(\"YYYY-MM-DD\"),\r\n            body: \"\"\r\n          })\r\n          setInstruction({\r\n            label: \"\",\r\n            body: \"\"\r\n          })\r\n        }}\r\n      >\r\n        <DialogContent className={classes.dialog_body}>\r\n          <Grid container justifyContent=\"space-evenly\" style={{ minHeight: \"90%\" }}>\r\n            <Grid item sm={6} style={{ minHeight: \"100%\" }}>\r\n              <TextField\r\n                className={classes.row}\r\n                select\r\n                label=\"Information type\"\r\n                value={infoType}\r\n                onChange={e => changeInfoType(e.target.value)}\r\n              >\r\n                <MenuItem value=\"news\">\r\n                  <Typography variant=\"body2\">News</Typography>\r\n                </MenuItem>\r\n                <MenuItem value=\"instructions\">\r\n                  <Typography variant=\"body2\">Instructions</Typography>\r\n                </MenuItem>\r\n              </TextField>\r\n\r\n              <TextField\r\n                className={classes.row}\r\n                select\r\n                label=\"Domain\"\r\n                value={domain}\r\n                onChange={e => setDomain(e.target.value)}\r\n              >\r\n                <MenuItem value=\"healthcare\">\r\n                  <Typography variant=\"body2\">Health Care</Typography>\r\n                </MenuItem>\r\n                <MenuItem value=\"telecom\">\r\n                  <Typography variant=\"body2\">Telecommunication</Typography>\r\n                </MenuItem>\r\n                <MenuItem value=\"transport\">\r\n                  <Typography variant=\"body2\">Public Transportation</Typography>\r\n                </MenuItem>\r\n              </TextField>\r\n\r\n              {infoType === \"news\" &&\r\n                <div>\r\n                  <TextField\r\n                    name=\"title\"\r\n                    className={classes.row}\r\n                    value={news.title}\r\n                    label=\"Title\"\r\n                    onChange={e => setNews({ ...news, title: e.target.value })}\r\n                    InputLabelProps={{\r\n                      shrink: true\r\n                    }}\r\n                    multiline\r\n                  />\r\n\r\n                  <TextField\r\n                    name=\"date\"\r\n                    type=\"date\"\r\n                    value={news.date}\r\n                    label=\"Date\"\r\n                    className={classes.row}\r\n                    InputLabelProps={{\r\n                      shrink: true\r\n                    }}\r\n                    onChange={e => {\r\n                      setNews({ ...news, date: e.target.value })\r\n                      console.log(e.target.value)\r\n                    }}\r\n                  />\r\n\r\n                  <TextField\r\n                    name=\"body\"\r\n                    className={classes.row}\r\n                    value={news.body}\r\n                    label=\"Body\"\r\n                    onChange={e => setNews({ ...news, body: e.target.value })}\r\n                    InputLabelProps={{\r\n                      shrink: true\r\n                    }}\r\n                    multiline\r\n                  />\r\n                </div>\r\n              }\r\n\r\n              {infoType === \"instructions\" && instructions &&\r\n                <Box\r\n                  className={classes.instruction_container}\r\n                >\r\n                  {instructions.map((instruction, index) => <Instruction key={index} deleteIns={() => deleteIns(index, instruction.id)} {...instruction} />)}\r\n                </Box>\r\n              }\r\n            </Grid>\r\n\r\n            <Grid item sm={5} direction=\"column\" alignItems=\"center\" style={{ minHeight: \"100%\" }}>\r\n              <Typography variant=\"h5\" className={clsx(classes.title, classes.row)}>\r\n                {infoType === \"news\" ? \"Add to Newsfeed\" : \"Add Instruction\"}\r\n              </Typography>\r\n\r\n              {infoType === \"news\" &&\r\n                <div>\r\n                  <TextField\r\n                    className={classes.row}\r\n                    select\r\n                    label=\"Select Image\"\r\n                    value={news.imageUrl}\r\n                    onChange={e => setNews({ ...news, imageUrl: e.target.value })}\r\n                  >\r\n                    <MenuItem value={`/${domain}_launch.jpg`}>\r\n                      <Typography variant=\"body2\">Launch</Typography>\r\n                    </MenuItem>\r\n                    <MenuItem value='/version_update.png'>\r\n                      <Typography variant=\"body2\">Version Update</Typography>\r\n                    </MenuItem>\r\n                    <MenuItem value='/feature_update.png'>\r\n                      <Typography variant=\"body2\">Feature Update</Typography>\r\n                    </MenuItem>\r\n                  </TextField>\r\n                  <img\r\n                    src={news.imageUrl}\r\n                    height=\"auto\"\r\n                    width=\"100%\"\r\n                    alt=\"images\"\r\n                  />\r\n                </div>\r\n              }\r\n\r\n              {infoType === \"instructions\" &&\r\n                <div>\r\n                  <TextField\r\n                    name=\"label\"\r\n                    className={classes.row}\r\n                    label=\"Label\"\r\n                    value={instruction.label}\r\n                    onChange={e => setInstruction({ ...instruction, label: e.target.value })}\r\n                    multiline\r\n                    InputLabelProps={{\r\n                      shrink: true\r\n                    }}\r\n                  />\r\n\r\n                  <TextField\r\n                    name=\"body\"\r\n                    className={classes.row}\r\n                    label=\"Body\"\r\n                    value={instruction.body}\r\n                    onChange={e => setInstruction({ ...instruction, body: e.target.value })}\r\n                    multiline\r\n                    InputLabelProps={{\r\n                      shrink: true\r\n                    }}\r\n                  />\r\n\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    onClick={() => {\r\n                      addInstruction()\r\n                      setInstruction({\r\n                        label: \"\",\r\n                        body: \"\"\r\n                      })\r\n                    }}\r\n                  >\r\n                    Add\r\n                  </Button>\r\n                </div>\r\n              }\r\n            </Grid>\r\n          </Grid>\r\n          {infoType===\"news\" && <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className={classes.submit}\r\n            onClick={()=>handleSubmit()}\r\n          >\r\n            Submit\r\n          </Button>}\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Modal,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport Chatbot from \"../../components/Chatbot/Chatbot\";\r\nimport Feedback from \"./../../components/Chatbot/Feedback\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getChat } from \"./../../store/slices/chatbot\";\r\nimport { getUserSignedIn, getUser, getToken } from \"./../../store/slices/auth\";\r\nimport { Redirect, useHistory } from \"react-router\";\r\nimport api from \"./../../api/index\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Newsfeed from \"../../components/Chatbot/Newsfeed\";\r\nimport TokenGenerator from './../../helpers/TokenRefresh';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    background: `linear-gradient(45deg, ${theme.palette.primary.main} 30%, ${theme.palette.primary.dark} 90%)`,\r\n    minHeight: \"calc(100vh - 115px)\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingTop: \"20px\",\r\n    paddingBottom: \"20px\"\r\n  },\r\n  row: {\r\n    marginTop: theme.spacing(5),\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.contrastText,\r\n    fontWeight: \"600\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst HealthCare = () => {\r\n  const classes = useStyles();\r\n  const chat = useSelector(getChat);\r\n  const signedIn = useSelector(getUserSignedIn);\r\n  const user = useSelector(getUser);\r\n  const token = useSelector(getToken);\r\n  const [newsfeed, setNewsfeed] = useState({ \"posts\": [], \"instructions\": [] })\r\n  const history = useHistory();\r\n\r\n  const bk_1 = useMediaQuery((theme) => theme.breakpoints.up(\"lg\"));\r\n\r\n  const [displayFeedback, updateDisplayFeedback] = useState(false);\r\n\r\n  const submit = async (index, feedback) => {\r\n    updateDisplayFeedback(false);\r\n    console.log(index);\r\n    console.log(feedback);\r\n    const chatJSON = JSON.stringify(chat);\r\n    try {\r\n      await TokenGenerator(token)\r\n      await api.feedback.POST.feedback(\r\n        token.access,\r\n        user.id,\r\n        \"health care\",\r\n        index,\r\n        feedback,\r\n        chatJSON\r\n      );\r\n      toast.success(\"Feedback added\");\r\n      setTimeout(() => {\r\n        history.push(\"/home\");\r\n      }, 2000);\r\n    } catch (err) {\r\n      console.log(err.response);\r\n      toast.error(\"Something went wrong\");\r\n    }\r\n  };\r\n\r\n  const getNewsfeedContent = async () => {\r\n    try {\r\n      let posts = await api.newsfeed.GET.getNews(token.access, \"healthcare\")\r\n      let instructions = await api.newsfeed.GET.getInstructions(token.access, \"healthcare\")\r\n      setNewsfeed({ \"posts\": posts.data, \"instructions\": instructions.data })\r\n    }\r\n    catch (err) {\r\n      toast.error(\"Data fetch failed\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getNewsfeedContent()\r\n  }, [])\r\n\r\n\r\n  if (!signedIn) return <Redirect to=\"/home\" />;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container>\r\n        <ToastContainer />\r\n        <Grid\r\n          container\r\n          alignItems=\"center\"\r\n          justifyContent={bk_1 ? \"space-between\" : \"space-around\"}\r\n          spacing={4}\r\n        >\r\n          <Grid item alignItems=\"center\" sm={12} md={6}>\r\n            <Newsfeed\r\n              domain=\"Health Care\"\r\n              domainImg=\"/healthcare_1.svg\"\r\n              posts={newsfeed.posts}\r\n              instructions={newsfeed.instructions}\r\n            />\r\n          </Grid>\r\n          <Grid item alignItems=\"center\" justifyContent=\"center\" sm={12} md={5}>\r\n            <Chatbot\r\n              finish={() => updateDisplayFeedback(true)}\r\n              domain=\"healthcare\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Modal\r\n          open={displayFeedback}\r\n          aria-labelledby=\"simple-modal-title\"\r\n          aria-describedby=\"simple-modal-description\"\r\n        >\r\n          <Feedback submit={(index, feedback) => submit(index, feedback)} />\r\n        </Modal>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HealthCare;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Container, Grid, makeStyles, Modal, useMediaQuery } from '@material-ui/core';\r\nimport Chatbot from '../../components/Chatbot/Chatbot';\r\nimport Feedback from './../../components/Chatbot/Feedback';\r\nimport { useSelector } from 'react-redux';\r\nimport { getUserSignedIn, getUser, getToken } from './../../store/slices/auth';\r\nimport { Redirect, useHistory } from 'react-router';\r\nimport { getChat } from './../../store/slices/chatbot';\r\nimport api from './../../api/index';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport Newsfeed from \"../../components/Chatbot/Newsfeed\";\r\nimport { useDispatch } from 'react-redux';\r\nimport TokenGenerator from './../../helpers/TokenRefresh';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    background: `linear-gradient(45deg, ${theme.palette.primary.main} 30%, ${theme.palette.primary.dark} 90%)`,\r\n    minHeight: \"calc(100vh - 115px)\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingTop: \"20px\",\r\n    paddingBottom: \"20px\"\r\n  },\r\n  row: {\r\n    marginTop: theme.spacing(5)\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.contrastText,\r\n    fontWeight: \"600\",\r\n    marginBottom: theme.spacing(2)\r\n  }\r\n}))\r\n\r\nconst Telecommunication = () => {\r\n  const classes = useStyles()\r\n  const signedIn = useSelector(getUserSignedIn)\r\n  const chat = useSelector(getChat)\r\n  const user = useSelector(getUser)\r\n  const token = useSelector(getToken)\r\n  const [newsfeed, setNewsfeed] = useState({ \"posts\": [], \"instructions\": [] })\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const bk_1 = useMediaQuery(theme => theme.breakpoints.up('lg'))\r\n\r\n  const [displayFeedback, updateDisplayFeedback] = useState(false)\r\n\r\n  const submit = async (index, feedback) => {\r\n    updateDisplayFeedback(false)\r\n    const chatJSON = JSON.stringify(chat)\r\n    try {\r\n      await TokenGenerator(token)\r\n      await api.feedback.POST.feedback(token.access, user.id, 'telecom', index, feedback, chatJSON)\r\n      toast.success('Feedback added')\r\n      setTimeout(() => {\r\n        history.push(\"/home\");\r\n      }, 2000);\r\n    } catch (err) {\r\n      console.log(err.response)\r\n      toast.error('Something went wrong')\r\n    }\r\n  }\r\n\r\n  const getNewsfeedContent = async () => {\r\n    try {\r\n      let posts = await api.newsfeed.GET.getNews(token.access, \"telecom\")\r\n      let instructions = await api.newsfeed.GET.getInstructions(token.access, \"telecom\")\r\n      setNewsfeed({ \"posts\": posts.data, \"instructions\": instructions.data })\r\n    }\r\n    catch (err) {\r\n      toast.error(\"Data fetch failed\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getNewsfeedContent()\r\n  }, [])\r\n\r\n  if (!signedIn) return <Redirect to=\"/home\" />\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container>\r\n        <ToastContainer />\r\n        <Grid container alignItems=\"center\" justifyContent={bk_1 ? \"space-between\" : \"space-around\"} spacing={4}>\r\n          <Grid item alignItems=\"center\" sm={12} md={6}>\r\n            <Newsfeed\r\n              domain=\"Telecommunication\"\r\n              domainImg=\"/telecommunication_1.svg\"\r\n              posts={newsfeed.posts}\r\n              instructions={newsfeed.instructions}\r\n            />\r\n          </Grid>\r\n          <Grid item alignItems=\"center\" justifyContent=\"center\" sm={12} md={5}>\r\n            <Chatbot finish={() => updateDisplayFeedback(true)} domain='telecom' />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Modal\r\n          open={displayFeedback}\r\n          aria-labelledby=\"simple-modal-title\"\r\n          aria-describedby=\"simple-modal-description\"\r\n        >\r\n          <Feedback submit={(index, feedback) => submit(index, feedback)} />\r\n        </Modal>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Telecommunication\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport { Parallax } from \"react-scroll-parallax\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    background: `linear-gradient(45deg, ${theme.palette.primary.main} 30%, ${theme.palette.primary.dark} 90%)`,\r\n    height: \"calc(100vh - 110px)\",\r\n  },\r\n  container: {\r\n    height: \"100%\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(4),\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      margin: \"20px 0px\",\r\n    },\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      margin: \"20px 20px\",\r\n    },\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  parallax: {\r\n    margin: \"0px\",\r\n  },\r\n  body: {\r\n    background: `linear-gradient(45deg, ${theme.palette.primary.dark} 30%, ${theme.palette.primary.light} 90%)`,\r\n    paddingTop: \"120px\",\r\n    paddingBottom: \"80px\",\r\n    textAlign: \"center\",\r\n  },\r\n  name: {\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  subtitle: {\r\n    color: theme.palette.secondary.light,\r\n  },\r\n  content: {\r\n    textAlign: \"justify\",\r\n    textJustify: \"inter-word\",\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3),\r\n  },\r\n  img: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nconst AboutUs = () => {\r\n  const classes = useStyles();\r\n  const bk = useMediaQuery((theme) => theme.breakpoints.up(\"md\"));\r\n  return (\r\n    <div>\r\n      <Parallax className={classes.parallax} y={[-45, 20]} tagOuter=\"figure\">\r\n        <Paper className={classes.body} square elevation={3}>\r\n          <Typography className={classes.name} component=\"h3\" variant=\"h3\">\r\n            About Us\r\n          </Typography>\r\n          <Typography className={classes.subtitle} component=\"h6\" variant=\"h6\">\r\n            This is our story\r\n          </Typography>\r\n        </Paper>\r\n      </Parallax>\r\n      <Parallax className={classes.parallax} y={[-5, 5]} tagOuter=\"figure\">\r\n        <Grid\r\n          container\r\n          className={classes.container}\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-around\"\r\n        >\r\n          <Grid item sm={12} md={4} className={classes.img}>\r\n            <img\r\n              src=\"/herosection.svg\"\r\n              height=\"auto\"\r\n              width={bk ? \"100%\" : \"70%\"}\r\n              alt=\"\"\r\n            />\r\n          </Grid>\r\n          <Grid item sm={12} md={5}>\r\n            <Paper className={classes.paper} elevation={12}>\r\n              <Typography variant=\"h4\" className={classes.title}>\r\n                Who we are\r\n              </Typography>\r\n              <Typography variant=\"body1\" className={classes.content}>\r\n                We are a team of undergraduates at the department of computer\r\n                science and engineering, University of Moratuwa, Sri Lanka.\r\n                Mainly there are three developers are working on this project as\r\n                a team. Even this project is being developed as a module project\r\n                in the university, we always try to include the latest\r\n                technologies and also best practices in software development.\r\n              </Typography>\r\n              <Typography variant=\"h4\" className={classes.title}>\r\n                Our work\r\n              </Typography>\r\n              <Typography variant=\"body1\" className={classes.content}>\r\n                Our vision is to develop the most intelligent chatbot to resolve\r\n                social inquiries in the domains of Transportation, Healthcare,\r\n                and Telecommunication. We are using the leading conversational\r\n                platform Rasa to give the best experience of the chatbot.\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Parallax>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutUs;\r\n","import { TextField } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\n\r\nconst CustomTextField = withStyles({\r\n    root: {\r\n      \"& label.Mui-focused\": {\r\n        color: \"white\",\r\n      },\r\n      \"& .MuiInput-underline:after\": {\r\n        borderBottomColor: \"white\",\r\n      },\r\n      \"& .MuiOutlinedInput-root\": {\r\n        \"& fieldset\": {\r\n          borderColor: \"white\",\r\n        },\r\n        \"&:hover fieldset\": {\r\n          borderColor: \"cyan\",\r\n        },\r\n        \"&.Mui-focused fieldset\": {\r\n          borderColor: \"white\",\r\n        },\r\n      },\r\n      \"& .MuiFormLabel-root\": {\r\n        color: \"white\",\r\n      },\r\n    },\r\n  })(TextField);\r\n\r\n  export default CustomTextField;","import { useFormik } from 'formik';\r\nimport React from 'react';\r\nimport * as Yup from 'yup'\r\n\r\nimport { Button, Container, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport CustomTextField from '../CustomTextField';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      background: `linear-gradient(45deg, ${theme.palette.primary.light} , ${theme.palette.primary.main} 90%)`,\r\n      padding: theme.spacing(4),\r\n      borderRadius: theme.spacing(2),\r\n      color: theme.palette.primary.contrastText,\r\n    },\r\n    form: {\r\n      width: \"100%\",\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n    inputtext: {\r\n      color: 'white'\r\n    },\r\n    error: {\r\n      color: \"#EDC3C0\"\r\n    }\r\n  }));\r\n  \r\nconst LoginForm = ({onSubmit}) => {\r\n    const classes = useStyles();\r\n    const formik = useFormik({\r\n        initialValues: {\r\n          email: \"\",\r\n          password: \"\"\r\n        },\r\n        validationSchema: Yup.object().shape({\r\n          email: Yup.string()\r\n            .email('Invalid Type')\r\n            .required('Required Field'),\r\n          password: Yup.string()\r\n            .min(6, 'Minimum of 6 Characters Needed')\r\n            .required('Required Field')\r\n        }),\r\n        onSubmit: onSubmit\r\n      })\r\n    \r\n    return (\r\n        <div>\r\n             <Container component=\"main\" maxWidth=\"xs\">\r\n            <div className={classes.paper}>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                User Login\r\n              </Typography>\r\n              <form className={classes.form} onSubmit={formik.handleSubmit} noValidate>\r\n                <Grid container spacing={4}>\r\n                  <Grid item xs={12}>\r\n                    <CustomTextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"email\"\r\n                      label=\"Email Address\"\r\n                      name=\"email\"\r\n                      autoComplete=\"email\"\r\n                      inputProps={{ className: classes.inputtext }}\r\n                      {...formik.getFieldProps('email')}\r\n                    />\r\n                    {formik.touched.email && formik.errors.email && <div data-testid=\"err-email\" className={classes.error}>{formik.errors.email}</div>}\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <CustomTextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      name=\"password\"\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      id=\"password\"\r\n                      autoComplete=\"current-password\"\r\n                      inputProps={{ \"data-testid\":\"password\", className: classes.inputtext }}\r\n                      {...formik.getFieldProps('password')}\r\n                    />\r\n                    {formik.touched.password && formik.errors.password && <div data-testid=\"err-pwd\" className={classes.error}>{formik.errors.password}</div>}\r\n                  </Grid>\r\n                </Grid>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  className={classes.submit}\r\n                >\r\n                  Login\r\n                </Button>\r\n                <Grid container justifyContent=\"center\" spacing=\"2\">\r\n                  <Grid item>\r\n                    <Link style={{ color: \"white\", textDecoration: \"none\" }} to=\"/forget_password\" variant=\"body2\">\r\n                      Forgot password?\r\n                    </Link>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Link style={{ color: \"white\", textDecoration: \"none\" }} to=\"/register\" variant=\"body2\">\r\n                      Not yet registered? Register from here\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","import React from \"react\";\r\nimport { makeStyles, Grid } from \"@material-ui/core\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserSignedIn } from \"./../../store/slices/auth\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport LoginForm from \"../../components/Forms/LoginForm\";\r\nimport { useHistory } from \"react-router\";\r\nimport api from \"../../api\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  userReceived,\r\n  userRequested,\r\n  userRequestFailed,\r\n  userTokenReceived,\r\n  userTokenRequested,\r\n  userTokenRequestFailed,\r\n} from \"../../store/slices/auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  logo: {\r\n    marginTop: theme.spacing(10),\r\n  },\r\n}));\r\n\r\nconst Login = () => {\r\n  const classes = useStyles();\r\n  const signedIn = useSelector(getUserSignedIn);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = async ({ email, password }) => {\r\n    try {\r\n      dispatch(userTokenRequested());\r\n      const res = await api.user.POST.signIn(email, password);\r\n      await dispatch(userTokenReceived(res.data));\r\n\r\n      dispatch(userRequested());\r\n      try {\r\n        const user = await api.user.GET.getUser(res.data.access);\r\n        dispatch(userReceived(user.data));\r\n        toast.success(\"Successful login\");\r\n        if (user.is_admin) {\r\n          setTimeout(() => {\r\n            history.push(\"/admin/dashboard\");\r\n          }, 2000);\r\n        } else {\r\n          setTimeout(() => {\r\n            history.push(\"/home\");\r\n          }, 2000);\r\n        }\r\n      } catch (err) {\r\n        dispatch(userRequestFailed());\r\n      }\r\n    } catch (err) {\r\n      dispatch(userTokenRequestFailed());\r\n      toast.error(\"Login failed\");\r\n    }\r\n  };\r\n\r\n  if (signedIn) return <Redirect to=\"/home\" />;\r\n\r\n  return (\r\n    <div>\r\n      <ToastContainer />\r\n      <Grid container alignItems=\"center\" justifyContent=\"space-around\">\r\n        <Grid item sm={12} md={5}>\r\n          <div className={classes.logo}>\r\n            <img src=\"./logo.svg\" width=\"400px\" alt=\"logo\" />\r\n          </div>\r\n        </Grid>\r\n        <Grid item sm={12} md={5}>\r\n          <LoginForm onSubmit={handleSubmit} />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useFormik } from 'formik';\r\nimport React from 'react';\r\nimport * as Yup from 'yup'\r\nimport { Button, Container, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport CustomTextField from '../CustomTextField';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      background: `linear-gradient(45deg, ${theme.palette.primary.light} , ${theme.palette.primary.main} 90%)`,\r\n      padding: theme.spacing(4),\r\n      borderRadius: theme.spacing(2),\r\n      color: theme.palette.primary.contrastText,\r\n    },\r\n    form: {\r\n      width: \"100%\",\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n    inputtext: {\r\n      color: 'white'\r\n    },\r\n    error: {\r\n      color: \"#EDC3C0\"\r\n    }\r\n  }));\r\n  \r\n\r\nconst RegisterForm = ({onSubmit}) => {\r\n    const classes = useStyles();\r\n    const formik = useFormik({\r\n        initialValues: {\r\n          first_name: \"\",\r\n          last_name: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          re_password: \"\"\r\n        },\r\n        validationSchema: Yup.object().shape({\r\n          first_name: Yup.string()\r\n            .min(1, 'Enter a longer first name')\r\n            .required('Required Field'),\r\n          last_name: Yup.string()\r\n            .min(1, 'Enter a longer last name')\r\n            .required('Required Field'),\r\n          email: Yup.string()\r\n            .email('Invalid Type')\r\n            .required('Required Field'),\r\n          password: Yup.string()\r\n            .min(6, 'Minimum of 6 Characters Needed')\r\n            .required('Required Field'),\r\n          re_password: Yup.string()\r\n            .min(6, 'Minimum of 6 Characters Needed')\r\n            .required('Required Field'),\r\n        }),\r\n        onSubmit: onSubmit\r\n      })\r\n    \r\n    return (\r\n        <div>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n            <div className={classes.paper}>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Registration\r\n              </Typography>\r\n              <form className={classes.form} onSubmit={formik.handleSubmit} noValidate>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <CustomTextField\r\n                      autoComplete=\"name\"\r\n                      name=\"first_name\"\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"first_name\"\r\n                      label=\"First Name\"\r\n                      inputProps={{ className: classes.inputtext }}\r\n                      {...formik.getFieldProps('first_name')}\r\n                    />\r\n                    {formik.touched.first_name && formik.errors.first_name && <div data-testid=\"err-firstname\" className={classes.error}>{formik.errors.first_name}</div>}\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <CustomTextField\r\n                      autoComplete=\"name\"\r\n                      name=\"last_name\"\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"last_name\"\r\n                      label=\"Last Name\"\r\n                      inputProps={{ className: classes.inputtext }}\r\n                      {...formik.getFieldProps('last_name')}\r\n                    />\r\n                    {formik.touched.last_name && formik.errors.last_name && <div data-testid=\"err-lastname\" className={classes.error}>{formik.errors.last_name}</div>}\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <CustomTextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"email\"\r\n                      label=\"Email Address\"\r\n                      name=\"email\"\r\n                      autoComplete=\"email\"\r\n                      inputProps={{ className: classes.inputtext }}\r\n                      {...formik.getFieldProps('email')}\r\n                    />\r\n                    {formik.touched.email && formik.errors.email && <div data-testid=\"err-email\" className={classes.error}>{formik.errors.email}</div>}\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <CustomTextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      name=\"password\"\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      id=\"password\"\r\n                      autoComplete=\"current-password\"\r\n                      inputProps={{ \"data-testid\":\"password\", className: classes.inputtext }}\r\n                      {...formik.getFieldProps('password')}\r\n                    />\r\n                    {formik.touched.password && formik.errors.password && <div data-testid=\"err-pwd\"  className={classes.error}>{formik.errors.password}</div>}\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <CustomTextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      name=\"re_password\"\r\n                      label=\"Confirm Password\"\r\n                      type=\"password\"\r\n                      id=\"re_password\"\r\n                      autoComplete=\"current-password\"\r\n                      inputProps={{ \"data-testid\":\"re_password\", className: classes.inputtext }}\r\n                      {...formik.getFieldProps('re_password')}\r\n                    />\r\n                    {formik.touched.re_password && formik.errors.re_password && <div data-testid=\"err-repwd\" className={classes.error}>{formik.errors.re_password}</div>}\r\n                  </Grid>\r\n                </Grid>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  data-testid=\"register\"\r\n                  className={classes.submit}\r\n                >\r\n                  Register\r\n                </Button>\r\n                <Grid container justifyContent=\"center\">\r\n                  <Grid item>\r\n                    <Link style={{ color: \"white\", textDecoration: \"none\" }} to=\"/\" variant=\"body2\">\r\n                      Already have an account? Sign in from here\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterForm;","import {\r\n  Grid,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport api from '../../api';\r\nimport { toast } from 'react-toastify';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { getUserSignedIn } from './../../store/slices/auth';\r\nimport RegisterForm from \"../../components/Forms/RegisterForm\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    background: `linear-gradient(45deg, ${theme.palette.primary.light} , ${theme.palette.primary.main} 90%)`,\r\n    padding: theme.spacing(4),\r\n    borderRadius: theme.spacing(2),\r\n    color: theme.palette.primary.contrastText,\r\n  },\r\n  logo: {\r\n    marginTop: theme.spacing(10),\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  inputtext: {\r\n    color: 'white'\r\n  },\r\n  error: {\r\n    color: \"#EDC3C0\"\r\n  }\r\n}));\r\n\r\nconst Register = () => {\r\n  const classes = useStyles();\r\n  const signedIn = useSelector(getUserSignedIn)\r\n  const history = useHistory()\r\n\r\n  const handleSubmit = async ({ first_name, last_name, email, password, re_password }) => {\r\n    let user_type = \"user\"\r\n    try {\r\n      await api.user.POST.signUp(first_name, last_name, email, user_type, password, re_password)\r\n      toast.success(\"Registration success, Check your email for activation\")\r\n      setTimeout(() => {\r\n        history.push('/')\r\n      }, 5000)\r\n    } catch (err) {\r\n      toast.error(\"Registration failed\")\r\n      Object.values(err.response.data)[0].map((error) => toast.error(error))\r\n      console.log(err.response.data)\r\n    }\r\n  }\r\n\r\n  // const submit = async (username, email, password, repassword) => {\r\n  //   const config = {\r\n  //     headers: {\r\n  //       'Content-Type': 'application/json'\r\n  //     }\r\n  //   }\r\n\r\n  //   const body = JSON.stringify({ username, email, password, repassword })\r\n\r\n  //   try {\r\n  //     const res = await axios.post(`${process.env.REACT_APP_SERVER_URL}auth/users/`, body, config)\r\n  //     console.log(\"data added\")\r\n  //   } catch (err) {\r\n  //     console.log(err.message)\r\n  //   }\r\n  // }\r\n\r\n  if (signedIn) return <Redirect to=\"/home\" />\r\n\r\n  return (\r\n    <div>\r\n      <ToastContainer />\r\n      <Grid container alignItems=\"center\" justifyContent=\"space-around\">\r\n        <Grid item sm={12} md={5}>\r\n          <div className={classes.logo}>\r\n            <img src=\"./logo.svg\" width=\"400px\" alt=\"logo\" />\r\n          </div>\r\n        </Grid>\r\n        <Grid item sm={12} md={5}>\r\n          <RegisterForm onSubmit={handleSubmit} />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import {\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport CustomTextField from \"../../components/CustomTextField\";\r\nimport React from 'react'\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport api from './../../api/index';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: \"70vh\",\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    height: \"fit-content\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    background: `linear-gradient(45deg, ${theme.palette.primary.light} , ${theme.palette.primary.main} 90%)`,\r\n    padding: theme.spacing(4),\r\n    borderRadius: theme.spacing(2),\r\n    color: theme.palette.primary.contrastText,\r\n    width: \"fit-content\"\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  inputtext: {\r\n    color: 'white'\r\n  },\r\n  error: {\r\n    color: \"#EDC3C0\"\r\n  }\r\n}))\r\n\r\nconst ResetPassword = () => {\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n  const { uid, token } = useParams()\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      password: \"\",\r\n      re_password: \"\"\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n      password: Yup.string()\r\n        .min(6, 'Minimum of 6 Characters Needed')\r\n        .required('Required Field'),\r\n      re_password: Yup.string().when(\"password\", {\r\n        is: val => (val && val.length > 0 ? true : false),\r\n        then: Yup.string().oneOf(\r\n          [Yup.ref(\"password\")],\r\n          \"Passwords need to be the same\"\r\n        )\r\n      })\r\n    }),\r\n    onSubmit: async ({ password, re_password }) => {\r\n      try {\r\n        await api.user.POST.resetPassword(uid, token, password, re_password)\r\n        toast.success('Password reset successful')\r\n        setTimeout(() => {\r\n          history.push(\"/\")\r\n        }, 4000)\r\n      } catch (err) {\r\n        console.log(err)\r\n        toast.error('Password reset failed')\r\n      }\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\" className={classes.root}>\r\n      <ToastContainer />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Enter your new password\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={formik.handleSubmit} noValidate>\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n              <CustomTextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                inputProps={{ className: classes.inputtext }}\r\n                {...formik.getFieldProps('password')}\r\n              />\r\n              {formik.touched.password && formik.errors.password && <div className={classes.error}>{formik.errors.password}</div>}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <CustomTextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"re_password\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                id=\"re_password\"\r\n                autoComplete=\"current-password\"\r\n                inputProps={{ className: classes.inputtext }}\r\n                {...formik.getFieldProps('re_password')}\r\n              />\r\n              {formik.touched.re_password && formik.errors.re_password && <div className={classes.error}>{formik.errors.re_password}</div>}\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className={classes.submit}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ResetPassword\r\n","import {\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Typography\r\n} from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport CustomTextField from './../../components/CustomTextField';\r\nimport { Link } from 'react-router-dom';\r\nimport api from './../../api/index';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: \"70vh\",\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    height: \"fit-content\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    background: `linear-gradient(45deg, ${theme.palette.primary.light} , ${theme.palette.primary.main} 90%)`,\r\n    padding: theme.spacing(4),\r\n    borderRadius: theme.spacing(2),\r\n    color: theme.palette.primary.contrastText,\r\n    width: \"fit-content\"\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  inputtext: {\r\n    color: 'white'\r\n  },\r\n  error: {\r\n    color: \"#EDC3C0\"\r\n  }\r\n}))\r\n\r\nconst ForgetPassword = () => {\r\n  const classes = useStyles()\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\"\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n      email: Yup.string()\r\n        .email('Invalid Type')\r\n        .required('Required Field')\r\n    }),\r\n    onSubmit: async ({ email }) => {\r\n      try {\r\n        console.log(email)\r\n        await api.user.POST.forgotPassword(email)\r\n        toast.success('Check your email')\r\n      } catch (err) {\r\n        console.log(err)\r\n        toast.error('Reset password failed')\r\n      }\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\" className={classes.root}>\r\n      <ToastContainer />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Forgot Password? Enter your email\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={formik.handleSubmit} noValidate>\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n              <CustomTextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                inputProps={{ className: classes.inputtext }}\r\n                {...formik.getFieldProps('email')}\r\n              />\r\n              {formik.touched.email && formik.errors.email && <div className={classes.error}>{formik.errors.email}</div>}\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className={classes.submit}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Grid container justifyContent=\"center\">\r\n            <Grid item>\r\n              <Link style={{ color: \"white\", textDecoration: \"none\" }} to=\"/\" variant=\"body2\">\r\n                Go to login page from here\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ForgetPassword\r\n","import { createTheme } from '@material-ui/core';\r\n\r\nexport const fonts = {\r\n  Poppins: \"Poppins\"\r\n}\r\n\r\nconst theme = createTheme({\r\n  typography: {\r\n    fontFamily: [\"Poppins\", \"sans-serif\"].join(\",\"),\r\n  },\r\n  palette: {\r\n    type: 'light',\r\n    primary: {\r\n      light: \"#0292BE\",\r\n      main: \"#3A637E\",\r\n      dark: \"#1A2C38\",\r\n      contrastText: \"#fff\",\r\n    },\r\n    secondary: {\r\n      light: \"#D3EFF8\",\r\n      main: \"#BBDB9B\",\r\n      dark: \"#ABC4A1\",\r\n      contrastText: \"#000\",\r\n    },\r\n  },\r\n});\r\n\r\ntheme.typography.h6 = {\r\n  [theme.breakpoints.up('md')]: {\r\n    fontSize: \"1.3rem\",\r\n    fontWeight: 500\r\n  },\r\n  [theme.breakpoints.down('md')]: {\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: 500\r\n  },\r\n  [theme.breakpoints.down('sm')]: {\r\n    fontSize: \"1.0rem\",\r\n    fontWeight: 500\r\n  },\r\n  [theme.breakpoints.down('xs')]: {\r\n    fontSize: \"0.5rem\",\r\n    fontWeight: 500\r\n  },\r\n}\r\n\r\ntheme.typography.h1 = {\r\n  [theme.breakpoints.up('md')]: {\r\n    fontSize: \"5.5rem\",\r\n    fontWeight: 500\r\n  },\r\n  [theme.breakpoints.down('md')]: {\r\n    fontSize: \"4.0rem\",\r\n    fontWeight: 500\r\n  },\r\n  [theme.breakpoints.down('sm')]: {\r\n    fontSize: \"3.8rem\",\r\n    fontWeight: 500\r\n  },\r\n  [theme.breakpoints.down('xs')]: {\r\n    fontSize: \"3.2rem\",\r\n    fontWeight: 500\r\n  },\r\n}\r\n\r\ntheme.typography.h3 = {\r\n  [theme.breakpoints.up('md')]: {\r\n    fontSize: \"2.5rem\",\r\n    fontWeight: 500\r\n  },\r\n  [theme.breakpoints.down('md')]: {\r\n    fontSize: \"2.0rem\",\r\n    fontWeight: 500\r\n  },\r\n  [theme.breakpoints.down('sm')]: {\r\n    fontSize: \"1.8rem\",\r\n    fontWeight: 500\r\n  },\r\n  [theme.breakpoints.down('xs')]: {\r\n    fontSize: \"1.5rem\",\r\n    fontWeight: 500\r\n  },\r\n}\r\n\r\ntheme.typography.body1 = {\r\n  [theme.breakpoints.up('md')]: {\r\n    fontSize: \"1.0rem\",\r\n    fontWeight: 500\r\n  },\r\n  [theme.breakpoints.down('md')]: {\r\n    fontSize: \"0.9rem\",\r\n    fontWeight: 500\r\n  },\r\n  [theme.breakpoints.down('sm')]: {\r\n    fontSize: \"0.8rem\",\r\n    fontWeight: 500\r\n  },\r\n  [theme.breakpoints.down('xs')]: {\r\n    fontSize: \"0.7rem\",\r\n    fontWeight: 500\r\n  },\r\n\r\n  \r\n}\r\n\r\ntheme.typography.subtitle2 = {\r\n  [theme.breakpoints.up('md')]: {\r\n    fontSize: \"0.9rem\",\r\n    fontWeight: 500\r\n  },\r\n  [theme.breakpoints.down('md')]: {\r\n    fontSize: \"0.8rem\",\r\n    fontWeight: 500\r\n  },\r\n  [theme.breakpoints.down('sm')]: {\r\n    fontSize: \"0.7rem\",\r\n    fontWeight: 500\r\n  },\r\n  [theme.breakpoints.down('xs')]: {\r\n    fontSize: \"0.6rem\",\r\n    fontWeight: 500\r\n  },\r\n}\r\n\r\nexport default theme;","import {\r\n  Button,\r\n  Container,\r\n  makeStyles,\r\n  Typography\r\n} from '@material-ui/core'\r\nimport React from 'react'\r\nimport { fonts } from './../../utils/theme';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport api from './../../api/index';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: \"70vh\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: 'center'\r\n  },\r\n  text: {\r\n    color: theme.palette.primary.contrastText\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(4),\r\n    fontFamily: fonts.Poppins,\r\n    fontWeight: 600,\r\n    color: theme.palette.primary.main,\r\n    height: \"fit-content\"\r\n  }\r\n}))\r\n\r\nconst AccountActivation = () => {\r\n  const classes = useStyles()\r\n  const { uid, token } = useParams()\r\n  const history = useHistory()\r\n\r\n  const activate = async () => {\r\n    try {\r\n      await api.user.POST.activateUser(uid, token)\r\n      toast.success('User activated')\r\n      setTimeout(() => {\r\n        history.push('/')\r\n      }, 4000)\r\n    } catch (err) {\r\n      console.log(err)\r\n      toast.error('Activation failed')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      <ToastContainer />\r\n      <Typography variant=\"h5\" className={classes.text}>Click here to activate your account</Typography>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        className={classes.button}\r\n        onClick={() => activate()}\r\n      >\r\n        Activate\r\n      </Button>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default AccountActivation\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Box, IconButton, makeStyles, Typography } from '@material-ui/core';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport moment from 'moment';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.primary.contrastText,\r\n    margin: theme.spacing(2),\r\n    borderRadius: '10px',\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n    alignItems: 'center'\r\n  },\r\n  tag: {\r\n    padding: theme.spacing(1),\r\n    borderRadius: '10px'\r\n  }\r\n}))\r\n\r\nconst FeedbackItem = ({ index, id, domain, timestamp, resolved, selectFeedback }) => {\r\n  const classes = useStyles()\r\n  const [tagColor, changeColor] = useState(resolved ? 'green' : 'red')\r\n\r\n  useEffect(() => {\r\n    changeColor(resolved ? 'green' : 'red')\r\n  }, [resolved])\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Typography variant=\"body2\">{`${index}.`}</Typography>\r\n      <Typography variant=\"body2\">{domain.toUpperCase()}</Typography>\r\n      <Typography variant=\"body2\">{`${moment(timestamp).format(\"YYYY-DD-MM\")}`}</Typography>\r\n      <Box className={classes.tag} style={{ backgroundColor: tagColor }}>\r\n        {resolved ? <Typography variant=\"body2\" style={{ color: 'white' }}>Resolved</Typography> : <Typography variant=\"body2\" style={{ color: 'white' }}>Unresolved</Typography>}\r\n      </Box>\r\n      <IconButton\r\n        onClick={() => {\r\n          selectFeedback(id)\r\n        }}\r\n      >\r\n        <OpenInNewIcon />\r\n      </IconButton>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default FeedbackItem\r\n","import { createSlice, createSelector } from '@reduxjs/toolkit';\r\n\r\nconst slice = createSlice({\r\n\tname: 'sessions',\r\n\tinitialState: {\r\n\t\tsessions_list: [],\r\n\t\tloading: false\r\n\t},\r\n\treducers: {\r\n\t\tsessionsRequested: store => {\r\n\t\t\tstore.loading = true;\r\n\t\t},\r\n\t\tsessionsRequestFailed: store => {\r\n\t\t\tstore.loading = false;\r\n\t\t},\r\n\t\tsessionsReceived: (store, action) => {\r\n\t\t\tstore.sessions_list = action.payload;\r\n\t\t\tstore.loading = false;\r\n\t\t}\r\n\t}\r\n});\r\n\r\nexport const { sessionsRequested, sessionsRequestFailed, sessionsReceived } =\r\n\tslice.actions;\r\n\r\nexport default slice.reducer;\r\n\r\nexport const getSessionsLoading = createSelector(\r\n\tstate => state.entities.sessions,\r\n\tsessions => sessions.loading\r\n);\r\n\r\nexport const getSessions = createSelector(\r\n\tstate => state.entities.sessions,\r\n\tsessions => sessions.sessions_list\r\n);\r\n","import { Card, Chip, makeStyles } from '@material-ui/core'\r\nimport React from 'react'\r\nimport ChatMessage from './ChatMessage'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  body: {\r\n    backgroundColor: theme.palette.secondary.light,\r\n    height:\"45vh\", \r\n    overflowY: \"auto\",\r\n    padding: theme.spacing(2, 0),\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(2)\r\n  }\r\n}))\r\n\r\n\r\nconst ChatDisplay = ({feedback, chatsession}) => {\r\n  const chat = JSON.parse(chatsession)\r\n  const classes = useStyles()\r\n  console.log(chat)\r\n  return (\r\n    <div>\r\n      <Card className={classes.body}>\r\n      <Chip label={feedback} color=\"primary\" icon={<CancelIcon />} style={{backgroundColor:'red'}}/>\r\n      {chat.map((message, index) => <ChatMessage {...message} key={`${index}`} />)}\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatDisplay\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Box, Button, Card, CardContent, Container, FormControl, FormControlLabel, FormLabel, Grid, makeStyles, Radio, RadioGroup, Typography } from '@material-ui/core';\r\nimport api from './../../api/index';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getToken } from './../../store/slices/auth';\r\nimport TokenGenerator from './../../helpers/TokenRefresh';\r\nimport { refreshToken } from '../../store/slices/auth';\r\nimport FeedbackItem from '../../components/FeedbackItem';\r\nimport { sessionsReceived, sessionsRequested, sessionsRequestFailed } from '../../store/slices/sessions';\r\nimport { getSessions } from '../../store/slices/sessions';\r\nimport ChatDisplay from '../../components/Chatbot/ChatDisplay';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    background: `linear-gradient(45deg, ${theme.palette.primary.main} 30%, ${theme.palette.primary.dark} 90%)`,\r\n    minHeight: \"calc(100vh - 115px)\",\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  container: {\r\n    height: \"80vh\"\r\n  },\r\n  breadcrumb: {\r\n    marginBottom: 'auto'\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.contrastText,\r\n  },\r\n  grid_container: {\r\n    height: '100%',\r\n  },\r\n  grid_item1: {\r\n    height: \"100%\",\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  grid_item2: {\r\n    height: \"100%\"\r\n  },\r\n  feedback_card: {\r\n    height: \"90%\",\r\n    width: \"100%\"\r\n  },\r\n  feedbacks: {\r\n    backgroundColor: '#d2d5d9',\r\n    height: \"80%\",\r\n    width: \"90%\",\r\n    borderRadius: \"10px\",\r\n    overflowY: 'auto'\r\n  },\r\n  heading: {\r\n    marginBottom: theme.spacing(2),\r\n    fontWeight: 600\r\n  },\r\n  subHeading: {\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  button: {\r\n    marginTop: 'auto',\r\n    marginLeft: 'auto'\r\n  }\r\n}))\r\n\r\nconst Feedback = () => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const [filter, changeFilter] = useState(\"all\")\r\n  const sessions = useSelector(getSessions)\r\n\r\n  const [selected, updateSelected] = useState(null)\r\n  const [selected_feedback, selectFeedback] = useState(null)\r\n\r\n  const token = useSelector(getToken)\r\n\r\n  useEffect(() => {\r\n    async function loadFeedback() {\r\n      try {\r\n        const access = await TokenGenerator(token)\r\n        if (access) dispatch(refreshToken(access))\r\n\r\n        dispatch(sessionsRequested())\r\n        const feedback_data = await api.feedback.GET.sessions(token.access)\r\n        dispatch(sessionsReceived(feedback_data.data))\r\n      } catch (err) {\r\n        console.log(err.message)\r\n        dispatch(sessionsRequestFailed())\r\n      }\r\n    }\r\n\r\n    loadFeedback()\r\n  }, [])\r\n\r\n  const resolveFeedback = async () => {\r\n    try {\r\n      const result = await api.feedback.PUT.updateFeedback(\r\n        selected_feedback.id,\r\n        selected_feedback.domain,\r\n        selected_feedback.rating,\r\n        selected_feedback.chatsession,\r\n        selected_feedback.feedback,\r\n        selected_feedback.user_id,\r\n        token.access\r\n      )\r\n      window.location.reload(false)\r\n    } catch (err) {\r\n      console.log(err.response)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const feedback = sessions.filter(session => session.id === selected)\r\n    selectFeedback(feedback[0])\r\n  }, [selected, updateSelected])\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container className={classes.container} maxWidth='xl'>\r\n        {/* <Breadcrumbs className={classes.breadcrumb}>\r\n          <Link style={{ color: '#d2d5d9' }} href='/admin/dashboard'>\r\n            <Typography variant=\"h6\">Dashboard</Typography>\r\n          </Link>\r\n          <Link style={{ color: 'white' }} href='/admin/dashboard/feedback'>\r\n            <Typography variant=\"h6\">Feedback</Typography>\r\n          </Link>\r\n        </Breadcrumbs> */}\r\n        <Grid container className={classes.grid_container}>\r\n          <Grid item lg={5} className={classes.grid_item1}>\r\n            <Typography variant=\"h2\" className={classes.title}>\r\n              Chat session feedbacks\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item lg={7} className={classes.grid_item1}>\r\n            <Card className={classes.feedback_card}>\r\n              <CardContent style={{ height: '100%' }}>\r\n                <Grid container className={classes.grid_container} justifyContent=\"space-evenly\">\r\n                  <Grid item md={5} className={classes.grid_item1} direction=\"column\">\r\n                    {/* <FormControl component=\"fieldset\">\r\n                      <FormLabel component=\"legend\">Filter Feedback</FormLabel>\r\n                      <RadioGroup name=\"filter\" value={filter} onChange={e => changeFilter(e.target.value)}>\r\n                        <FormControlLabel control={<Radio />} label=\"All\" value=\"all\" />\r\n                        <FormControlLabel control={<Radio />} label=\"Negative Feedback\" value=\"negative\" />\r\n                        <FormControlLabel control={<Radio />} label=\"Positive Feedback\" value=\"positive\" />\r\n                        <FormControlLabel control={<Radio />} label=\"Resolved\" value=\"resolved\" />\r\n                        <FormControlLabel control={<Radio />} label=\"Unresolved\" value=\"unresolved\" />\r\n                      </RadioGroup>\r\n                    </FormControl> */}\r\n\r\n                    <Box className={classes.feedbacks}>\r\n                      {sessions && sessions.map((session, index) => <FeedbackItem key={index} index={index + 1} selectFeedback={(id) => updateSelected(id)} {...session} />)}\r\n                    </Box>\r\n                  </Grid>\r\n                  <div style={{ border: '1px solid #d2d5d9', height: '100%' }} />\r\n                  <Grid item md={6} direction='column' className={classes.grid_item2}>\r\n                    <Typography variant=\"h5\" className={classes.heading}>Feedback Details</Typography>\r\n                    <Grid container>\r\n                      <Grid item md={3}>\r\n                        <Typography variant=\"h6\" style={{ fontWeight: 600 }}>Domain</Typography>\r\n                        {selected && selected_feedback && <Typography variant=\"body1\">{selected_feedback.domain.toUpperCase()}</Typography>}\r\n                      </Grid>\r\n                      <Grid item md={6}>\r\n                        <Typography variant=\"h6\" style={{ fontWeight: 600 }}>Resolve Status</Typography>\r\n                        {selected && selected_feedback && <Typography variant=\"body1\">{selected_feedback.resolved ? 'Resolved' : 'Unresolved'}</Typography>}\r\n                      </Grid>\r\n                      <Grid item md={3}>\r\n                        <Typography variant=\"h6\" style={{ fontWeight: 600 }}>Rating</Typography>\r\n                        {selected && selected_feedback && <Typography variant=\"body1\">{selected_feedback.rating}</Typography>}\r\n                      </Grid>\r\n                    </Grid>\r\n                    {selected && selected_feedback && <ChatDisplay feedback={selected_feedback.feedback} chatsession={selected_feedback.chatsession}  />}\r\n                    {selected && selected_feedback && !selected_feedback.resolved &&\r\n                      <Button\r\n                        variant='contained'\r\n                        color='secondary'\r\n                        onClick={() => resolveFeedback()}\r\n                        className={classes.button}\r\n                      >\r\n                        Mark As Resovled\r\n                      </Button>}\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Feedback\r\n","import Home from '../views/home';\r\nimport Product from '../views/product';\r\nimport ContactUs from '../views/home/ContactUs';\r\nimport PublicTransportation from '../views/chatbot/PublicTransportation';\r\nimport Dashboard from '../views/dashboard/index';\r\nimport HealthCare from '../views/chatbot/HealthCare.';\r\nimport Telecommunication from '../views/chatbot/Telecommunication';\r\nimport AboutUs from '../views/about';\r\nimport Login from './../views/login/index';\r\nimport Register from './../views/register/index';\r\nimport ResetPassword from './../views/helpers/ResetPassword';\r\nimport ForgetPassword from './../views/helpers/ForgetPassword';\r\nimport AccountActivation from './../views/helpers/AccountActivation';\r\nimport Feedback from './../views/dashboard/Feedback';\r\nimport Error404 from '../views/404';\r\n\r\nexport const routes_home = [\r\n\t{ exact: true, path: '/home', component: Home },\r\n\t{ exact: true, path: '/product', component: Product },\r\n\t{ exact: true, path: '/contactus', component: ContactUs },\r\n\t{ exact: true, path: '/aboutus', component: AboutUs },\r\n\t{\r\n\t\texact: true,\r\n\t\tpath: '/chatbot/public-transportation',\r\n\t\tcomponent: PublicTransportation\r\n\t},\r\n\t{ exact: true, path: '/chatbot/healthcare', component: HealthCare },\r\n\t{\r\n\t\texact: true,\r\n\t\tpath: '/chatbot/telecommunication',\r\n\t\tcomponent: Telecommunication\r\n\t},\r\n\t{ exact: true, path: '/admin/dashboard', component: Dashboard },\r\n\t{ exact: true, path: '/admin/dashboard/feedback', component: Feedback },\r\n\t{ component: Error404 }\r\n];\r\n\r\nexport const routes_login = [\r\n\t{ exact: true, path: '/', component: Login },\r\n\t{ exact: true, path: '/register', component: Register },\r\n\t{ exact: true, path: '/forget_password', component: ForgetPassword },\r\n\t{\r\n\t\texact: true,\r\n\t\tpath: '/password/reset/confirm/:uid/:token',\r\n\t\tcomponent: ResetPassword\r\n\t},\r\n\t{ exact: true, path: '/activate/:uid/:token', component: AccountActivation }\r\n];\r\n","import {\r\n  Container,\r\n  makeStyles,\r\n  Typography,\r\n  ThemeProvider,\r\n  createTheme,\r\n  Link,\r\n} from \"@material-ui/core\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nconst Footer = (props) => {\r\n  const classes = useStyles();\r\n  const { description, title } = props;\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <footer className={classes.footer}>\r\n        <Container>\r\n          <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n            {title}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            align=\"center\"\r\n            color=\"textSecondary\"\r\n            component=\"p\"\r\n          >\r\n            {description}\r\n          </Typography>\r\n          <Copyright />\r\n        </Container>\r\n      </footer>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nconst theme = createTheme({\r\n  typography: {\r\n    fontFamily: [\"Poppins\", \"sans-serif\"].join(\",\"),\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  footer: {\r\n    background: `linear-gradient(45deg, ${theme.palette.secondary.light} , ${theme.palette.secondary.main} 90%)`,\r\n    padding: theme.spacing(2, 0),\r\n    marginTop: 'auto'\r\n  },\r\n}));\r\n\r\nconst Copyright = () => {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"#\">\r\n        Wingman Inc.\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n\r\nFooter.propTypes = {\r\n  description: PropTypes.string,\r\n  title: PropTypes.string,\r\n};\r\n","import { AppBar, Box, Divider, Drawer, IconButton, List, ListItem, Grid, ListItemIcon, ListItemText, makeStyles, Toolbar, Typography } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport React, { useState } from 'react';\r\nimport DirectionsBusIcon from '@material-ui/icons/DirectionsBus';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getUser, getUserSignedIn, userSignedOut } from './../store/slices/auth';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  list: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  corner: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginLeft: 'auto',\r\n  },\r\n  navItem: {\r\n    width: \"fit-content\"\r\n  },\r\n  listItem: {\r\n    marginBottom: theme.spacing(3)\r\n  },\r\n  row: {\r\n    width: \"100%\",\r\n    marginTop: \"auto\"\r\n  },\r\n  arrowButton: {\r\n    marginRight: theme.spacing(-25)\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: theme.palette.primary.contrastText\r\n  },\r\n  sideNavLink: {\r\n    textDecoration: \"none\",\r\n    color: theme.palette.secondary.contrastText\r\n  },\r\n  name: {\r\n    display: \"inline\",\r\n    width: \"100%\"\r\n  }\r\n}));\r\n\r\nconst NavPanel = () => {\r\n  const classes = useStyles();\r\n  const [open, toggleOpen] = useState(false)\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(getUser)\r\n  const userSignedIn = useSelector(getUserSignedIn)\r\n  const history = useHistory()\r\n\r\n  const toggleLogin = () => {\r\n    if (userSignedIn) {\r\n      setTimeout(() => {\r\n        dispatch(userSignedOut())\r\n        history.push(\"/home\")\r\n      }, 500)\r\n    } else {\r\n      history.push(\"/\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          {userSignedIn && <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={() => toggleOpen(!open)}>\r\n            <MenuIcon />\r\n          </IconButton>}\r\n          <Grid container alignItems=\"center\">\r\n            <Grid container xs={8} md={10} alignItems=\"center\" justifyContent=\"space-between\">\r\n              {userSignedIn && user.is_superuser && <Grid item xs={2} md={2}>\r\n                <Link to=\"/admin/dashboard\" className={classes.link}>\r\n                  <Typography variant=\"h6\" className={classes.title}>\r\n                    Dashboard\r\n                  </Typography>\r\n                </Link>\r\n              </Grid>}\r\n              <Grid item xs={2} md={2}>\r\n                <Link to=\"/home\" className={classes.link}>\r\n                  <Typography variant=\"h6\" className={classes.title}>\r\n                    Home\r\n                  </Typography>\r\n                </Link>\r\n              </Grid>\r\n              <Grid item xs={2} md={2}>\r\n                <Link to=\"/product\" className={classes.link}>\r\n                  <Typography variant=\"h6\" className={classes.title}>\r\n                    Product\r\n                  </Typography>\r\n                </Link>\r\n              </Grid>\r\n              <Grid item xs={2} md={2}>\r\n                <Link to=\"/aboutus\" className={classes.link}>\r\n                  <Typography variant=\"h6\" className={classes.title}>\r\n                    About Us\r\n                  </Typography>\r\n                </Link>\r\n              </Grid>\r\n              <Grid item xs={2} md={2}>\r\n                <Link to=\"/contactus\" className={classes.link}>\r\n                  <Typography variant=\"h6\" className={classes.title}>\r\n                    Contact\r\n                  </Typography>\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            {userSignedIn && <Grid item xs={3} md={2} className={classes.corner}>\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n                Hi, {user.first_name}\r\n              </Typography>\r\n            </Grid>}\r\n          </Grid>\r\n          <div className={classes.corner}>\r\n            <ListItem button alignItems=\"center\" onClick={() => toggleLogin()}>\r\n              <Typography variant=\"h6\">\r\n                {userSignedIn ? \"Logout\" : \"Login\"}\r\n              </Typography>\r\n            </ListItem>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      {userSignedIn && <Drawer\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n      >\r\n        <Link to=\"/home\" className={classes.list}>\r\n          <img\r\n            src=\"/logo-robot-only.svg\"\r\n            height=\"auto\"\r\n            width=\"50px\"\r\n            alt=\"\"\r\n          />\r\n        </Link>\r\n        <List className={classes.list}>\r\n          <Link to=\"/chatbot/public-transportation\" className={classes.sideNavLink}>\r\n            <ListItem button alignItems=\"center\" className={classes.listItem}>\r\n              <ListItemIcon><DirectionsBusIcon /></ListItemIcon>\r\n              <ListItemText>Public Transportation</ListItemText>\r\n            </ListItem>\r\n          </Link>\r\n          <Link to=\"/chatbot/healthcare\" className={classes.sideNavLink}>\r\n            <ListItem button alignItems=\"center\" className={classes.listItem}>\r\n              <ListItemIcon><FavoriteBorderIcon /></ListItemIcon>\r\n              <ListItemText>Health Care</ListItemText>\r\n            </ListItem>\r\n          </Link>\r\n          <Link to=\"/chatbot/telecommunication\" className={classes.sideNavLink}>\r\n            <ListItem button alignItems=\"center\" className={classes.listItem}>\r\n              <ListItemIcon><PhoneIcon /></ListItemIcon>\r\n              <ListItemText>Telecommunication</ListItemText>\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n\r\n        <Box component=\"span\" className={classes.row}>\r\n          <Divider className={classes.divider} />\r\n          <IconButton button className={classes.arrowButton} onClick={() => toggleOpen(!open)}>\r\n            <ArrowLeftIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </Drawer>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavPanel;","import { Box, Container, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Footer from '../containers/Footer';\r\nimport NavPanel from '../containers/NavPanel';\r\nimport { Route } from 'react-router';\r\n\r\nconst HomeLayout = props => {\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<Container\r\n\t\t\t{...props}\r\n\t\t\tmaxWidth={false}\r\n\t\t\tdisableGutters\r\n\t\t\tclassName={classes.root}\r\n\t\t>\r\n\t\t\t<NavPanel />\r\n\t\t\t<Box className={classes.body}>{props.children}</Box>\r\n\t\t\t<Footer />\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nconst HomeLayoutRoute = ({ component: Component, ...rest }) => {\r\n\treturn (\r\n\t\t<Route\r\n\t\t\t{...rest}\r\n\t\t\trender={props => (\r\n\t\t\t\t<HomeLayout>\r\n\t\t\t\t\t<Component {...props} />\r\n\t\t\t\t</HomeLayout>\r\n\t\t\t)}\r\n\t\t></Route>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\tminHeight: '100vh',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column'\r\n\t},\r\n\tbody: {\r\n\t\tpaddingTop: theme.spacing(7)\r\n\t}\r\n}));\r\nexport default HomeLayoutRoute;\r\n","import { Box, Container, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Footer from '../containers/Footer';\r\nimport { Route } from 'react-router';\r\n\r\nconst LoginLayout = props => {\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<Container\r\n\t\t\t{...props}\r\n\t\t\tmaxWidth={false}\r\n\t\t\tdisableGutters\r\n\t\t\tclassName={classes.body}\r\n\t\t>\r\n\t\t\t<Box pt='50px' pb='50px'>\r\n\t\t\t\t{props.children}\r\n\t\t\t</Box>\r\n\t\t\t<Footer />\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nconst LoginLayoutRoute = ({ component: Component, ...rest }) => {\r\n\treturn (\r\n\t\t<Route\r\n\t\t\t{...rest}\r\n\t\t\trender={props => (\r\n\t\t\t\t<LoginLayout>\r\n\t\t\t\t\t<Component {...props} />\r\n\t\t\t\t</LoginLayout>\r\n\t\t\t)}\r\n\t\t></Route>\r\n\t);\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\tbody: {\r\n\t\tminHeight: '100vh',\r\n\t\tpaddingTop: '5vh',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tbackground: `linear-gradient(45deg, ${theme.palette.primary.main} 30%, ${theme.palette.primary.dark} 90%)`\r\n\t}\r\n}));\r\n\r\nexport default LoginLayoutRoute;\r\n","import React from 'react'\r\nimport { Switch } from 'react-router'\r\nimport { routes_login, routes_home } from './routes'\r\nimport HomeLayoutRoute from './../layout/HomeLayout';\r\nimport LoginLayoutRoute from './../layout/LoginLayout';\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <Switch>\r\n      {routes_login.map((route, index) => <LoginLayoutRoute {...route} key={index} />)}\r\n      {routes_home.map((route, index) => <HomeLayoutRoute {...route} key={index} />)}\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default AppRouter\r\n","import \"./App.css\";\r\nimport AppRouter from \"./router\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { CssBaseline, ThemeProvider } from \"@material-ui/core\";\r\nimport theme from \"./utils/theme\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <AppRouter />\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport chatbot from '../slices/chatbot';\r\nimport sessions from '../slices/sessions';\r\n\r\nexport default combineReducers({\r\n\tchatbot: chatbot,\r\n\tsessions: sessions\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport persistReducer from 'redux-persist/es/persistReducer';\r\nimport storageSession from 'redux-persist/lib/storage/session';\r\n\r\nimport AuthReducer from '../slices/auth';\r\nimport EntitiesReducer from './entities';\r\n\r\nconst persistConfig = {\r\n\tkey: 'root',\r\n\tstorage: storageSession,\r\n\twhiteList: ['auth', 'entities']\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n\tauth: AuthReducer,\r\n\tentities: EntitiesReducer\r\n});\r\n\r\nexport default persistReducer(persistConfig, rootReducer);\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport reducer from './reducers/reducer';\r\nimport { persistStore } from 'redux-persist';\r\n\r\nexport const store = configureStore({\r\n\treducer,\r\n\tmiddleware: getDefaultMiddleware =>\r\n\t\tgetDefaultMiddleware({\r\n\t\t\tserializableCheck: false\r\n\t\t})\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nconst stores = { store, persistor };\r\nexport default stores;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport App from \"./App\";\r\nimport { store, persistor } from \"./store/configureStore\";\r\nimport { ParallaxProvider } from \"react-scroll-parallax\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <BrowserRouter>\r\n        <ParallaxProvider>\r\n          <App />\r\n        </ParallaxProvider>\r\n      </BrowserRouter>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}